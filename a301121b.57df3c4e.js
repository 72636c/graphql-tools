(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{147:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return u}));var r=t(2),i=t(6),p=(t(0),t(199)),a={id:"_utils_src_index_.pruneschemaoptions",title:"PruneSchemaOptions",sidebar_label:"PruneSchemaOptions"},o={unversionedId:"api/interfaces/_utils_src_index_.pruneschemaoptions",id:"api/interfaces/_utils_src_index_.pruneschemaoptions",isDocsHomePage:!1,title:"PruneSchemaOptions",description:"Options for removing unused types from the schema",source:"@site/docs/api/interfaces/_utils_src_index_.pruneschemaoptions.md",slug:"/api/interfaces/_utils_src_index_.pruneschemaoptions",permalink:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/_utils_src_index_.pruneschemaoptions.md",version:"current",sidebar_label:"PruneSchemaOptions",sidebar:"someSidebar",previous:{title:"PrismaLoaderOptions",permalink:"/docs/api/interfaces/_loaders_prisma_src_index_.prismaloaderoptions"},next:{title:"Request",permalink:"/docs/api/interfaces/_utils_src_index_.request"}},s=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"<code>Optional</code> skipEmptyCompositeTypePruning",id:"optional-skipemptycompositetypepruning",children:[]},{value:"<code>Optional</code> skipEmptyUnionPruning",id:"optional-skipemptyunionpruning",children:[]},{value:"<code>Optional</code> skipUnimplementedInterfacesPruning",id:"optional-skipunimplementedinterfacespruning",children:[]},{value:"<code>Optional</code> skipUnusedTypesPruning",id:"optional-skipunusedtypespruning",children:[]}]}],c={rightToc:s};function u(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(p.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(p.b)("p",null,"Options for removing unused types from the schema"),Object(p.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("strong",{parentName:"li"},"PruneSchemaOptions"))),Object(p.b)("h2",{id:"index"},"Index"),Object(p.b)("h3",{id:"properties"},"Properties"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions#optional-skipemptycompositetypepruning"}),"skipEmptyCompositeTypePruning")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions#optional-skipemptyunionpruning"}),"skipEmptyUnionPruning")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions#optional-skipunimplementedinterfacespruning"}),"skipUnimplementedInterfacesPruning")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions#optional-skipunusedtypespruning"}),"skipUnusedTypesPruning"))),Object(p.b)("h2",{id:"properties-1"},"Properties"),Object(p.b)("h3",{id:"optional-skipemptycompositetypepruning"},Object(p.b)("inlineCode",{parentName:"h3"},"Optional")," skipEmptyCompositeTypePruning"),Object(p.b)("p",null,"\u2022 ",Object(p.b)("strong",{parentName:"p"},"skipEmptyCompositeTypePruning"),"? : ",Object(p.b)("em",{parentName:"p"},"boolean")),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"Defined in ",Object(p.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/prune.ts#L41"}),"packages/utils/src/prune.ts:41"))),Object(p.b)("p",null,"Set to ",Object(p.b)("inlineCode",{parentName:"p"},"true")," to skip pruning object types or interfaces with no no fields"),Object(p.b)("hr",null),Object(p.b)("h3",{id:"optional-skipemptyunionpruning"},Object(p.b)("inlineCode",{parentName:"h3"},"Optional")," skipEmptyUnionPruning"),Object(p.b)("p",null,"\u2022 ",Object(p.b)("strong",{parentName:"p"},"skipEmptyUnionPruning"),"? : ",Object(p.b)("em",{parentName:"p"},"boolean")),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"Defined in ",Object(p.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/prune.ts#L50"}),"packages/utils/src/prune.ts:50"))),Object(p.b)("p",null,"Set to ",Object(p.b)("inlineCode",{parentName:"p"},"true")," to skip pruning empty unions"),Object(p.b)("hr",null),Object(p.b)("h3",{id:"optional-skipunimplementedinterfacespruning"},Object(p.b)("inlineCode",{parentName:"h3"},"Optional")," skipUnimplementedInterfacesPruning"),Object(p.b)("p",null,"\u2022 ",Object(p.b)("strong",{parentName:"p"},"skipUnimplementedInterfacesPruning"),"? : ",Object(p.b)("em",{parentName:"p"},"boolean")),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"Defined in ",Object(p.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/prune.ts#L46"}),"packages/utils/src/prune.ts:46"))),Object(p.b)("p",null,"Set to ",Object(p.b)("inlineCode",{parentName:"p"},"true")," to skip pruning interfaces that are not implemented by any\nother types"),Object(p.b)("hr",null),Object(p.b)("h3",{id:"optional-skipunusedtypespruning"},Object(p.b)("inlineCode",{parentName:"h3"},"Optional")," skipUnusedTypesPruning"),Object(p.b)("p",null,"\u2022 ",Object(p.b)("strong",{parentName:"p"},"skipUnusedTypesPruning"),"? : ",Object(p.b)("em",{parentName:"p"},"boolean")),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"Defined in ",Object(p.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/prune.ts#L54"}),"packages/utils/src/prune.ts:54"))),Object(p.b)("p",null,"Set to ",Object(p.b)("inlineCode",{parentName:"p"},"true")," to skip pruning unused types"))}u.isMDXComponent=!0},199:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function p(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){p(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},p=Object.keys(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),u=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o({},n,{},e)),t},l=function(e){var n=u(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,p=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=u(t),m=r,d=l["".concat(a,".").concat(m)]||l[m]||b[m]||p;return t?i.a.createElement(d,o({ref:n},c,{components:t})):i.a.createElement(d,o({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var p=t.length,a=new Array(p);a[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var c=2;c<p;c++)a[c]=t[c];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);
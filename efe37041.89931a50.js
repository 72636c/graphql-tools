(window.webpackJsonp=window.webpackJsonp||[]).push([[446],{518:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return n})),t.d(r,"metadata",(function(){return o})),t.d(r,"toc",(function(){return l})),t.d(r,"default",(function(){return p}));var a=t(3),i=t(7),s=(t(0),t(552)),n={},o={unversionedId:"api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions",id:"api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions",isDocsHomePage:!1,title:"_packages_utils_src_interfaces_.iresolvervalidationoptions",description:"@graphql-tools/utils",source:"@site/docs/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions.md",slug:"/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions",permalink:"/docs/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions.md",version:"current",sidebar:"someSidebar",previous:{title:"_packages_loaders_prisma_src_prisma_yml_output_.ioutput",permalink:"/docs/api/interfaces/_packages_loaders_prisma_src_prisma_yml_output_.ioutput"},next:{title:"_packages_stitch_src_types_.istitchschemasoptions",permalink:"/docs/api/interfaces/_packages_stitch_src_types_.istitchschemasoptions"}},l=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"requireResolversForAllFields",id:"requireresolversforallfields",children:[]},{value:"requireResolversForArgs",id:"requireresolversforargs",children:[]},{value:"requireResolversForNonScalar",id:"requireresolversfornonscalar",children:[]},{value:"requireResolversForResolveType",id:"requireresolversforresolvetype",children:[]},{value:"requireResolversToMatchSchema",id:"requireresolverstomatchschema",children:[]}]}],c={toc:l};function p(e){var r=e.components,t=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},c,t,{components:r,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},Object(s.b)("a",Object(a.a)({parentName:"strong"},{href:"../README"}),"@graphql-tools/utils"))),Object(s.b)("h1",{id:"interface-iresolvervalidationoptions"},"Interface: IResolverValidationOptions"),Object(s.b)("p",null,"Options for validating resolvers"),Object(s.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("strong",{parentName:"li"},"IResolverValidationOptions"))),Object(s.b)("h2",{id:"index"},"Index"),Object(s.b)("h3",{id:"properties"},"Properties"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions#requireresolversforallfields"}),"requireResolversForAllFields")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions#requireresolversforargs"}),"requireResolversForArgs")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions#requireresolversfornonscalar"}),"requireResolversForNonScalar")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions#requireresolversforresolvetype"}),"requireResolversForResolveType")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.iresolvervalidationoptions#requireresolverstomatchschema"}),"requireResolversToMatchSchema"))),Object(s.b)("h2",{id:"properties-1"},"Properties"),Object(s.b)("h3",{id:"requireresolversforallfields"},"requireResolversForAllFields"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"requireResolversForAllFields"),": ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#validatorbehavior"}),"ValidatorBehavior")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Defined in ",Object(s.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L111"}),"packages/utils/src/Interfaces.ts:111"))),Object(s.b)("p",null,"Enable to require a resolver for be defined for all fields defined\nin the schema. Defaults to ",Object(s.b)("inlineCode",{parentName:"p"},"ignore"),"."),Object(s.b)("hr",null),Object(s.b)("h3",{id:"requireresolversforargs"},"requireResolversForArgs"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"requireResolversForArgs"),": ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#validatorbehavior"}),"ValidatorBehavior")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Defined in ",Object(s.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L101"}),"packages/utils/src/Interfaces.ts:101"))),Object(s.b)("p",null,"Enable to require a resolver to be defined for any field that has\narguments. Defaults to ",Object(s.b)("inlineCode",{parentName:"p"},"ignore"),"."),Object(s.b)("hr",null),Object(s.b)("h3",{id:"requireresolversfornonscalar"},"requireResolversForNonScalar"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"requireResolversForNonScalar"),": ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#validatorbehavior"}),"ValidatorBehavior")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Defined in ",Object(s.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L106"}),"packages/utils/src/Interfaces.ts:106"))),Object(s.b)("p",null,"Enable to require a resolver to be defined for any field which has\na return type that isn't a scalar. Defaults to ",Object(s.b)("inlineCode",{parentName:"p"},"ignore"),"."),Object(s.b)("hr",null),Object(s.b)("h3",{id:"requireresolversforresolvetype"},"requireResolversForResolveType"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"requireResolversForResolveType"),": ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#validatorbehavior"}),"ValidatorBehavior")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Defined in ",Object(s.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L116"}),"packages/utils/src/Interfaces.ts:116"))),Object(s.b)("p",null,"Enable to require a ",Object(s.b)("inlineCode",{parentName:"p"},"resolveType()")," for Interface and Union types.\nDefaults to ",Object(s.b)("inlineCode",{parentName:"p"},"ignore"),"."),Object(s.b)("hr",null),Object(s.b)("h3",{id:"requireresolverstomatchschema"},"requireResolversToMatchSchema"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"requireResolversToMatchSchema"),": ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#validatorbehavior"}),"ValidatorBehavior")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Defined in ",Object(s.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L121"}),"packages/utils/src/Interfaces.ts:121"))),Object(s.b)("p",null,"Enable to require all defined resolvers to match fields that\nactually exist in the schema. Defaults to ",Object(s.b)("inlineCode",{parentName:"p"},"error")," to catch common errors."))}p.isMDXComponent=!0},552:function(e,r,t){"use strict";t.d(r,"a",(function(){return b})),t.d(r,"b",(function(){return f}));var a=t(0),i=t.n(a);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,i=function(e,r){if(null==e)return{};var t,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),p=function(e){var r=i.a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},b=function(e){var r=p(e.components);return i.a.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return i.a.createElement(i.a.Fragment,{},r)}},d=i.a.forwardRef((function(e,r){var t=e.components,a=e.mdxType,s=e.originalType,n=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(t),d=a,f=b["".concat(n,".").concat(d)]||b[d]||u[d]||s;return t?i.a.createElement(f,o(o({ref:r},c),{},{components:t})):i.a.createElement(f,o({ref:r},c))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=t.length,n=new Array(s);n[0]=d;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,n[1]=o;for(var c=2;c<s;c++)n[c]=t[c];return i.a.createElement.apply(null,n)}return i.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);
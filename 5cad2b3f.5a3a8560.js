(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{246:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return p})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return d}));var n=a(3),c=a(7),r=(a(0),a(552)),s={},p={unversionedId:"api/modules/_packages_stitch_src_typecandidates_",id:"api/modules/_packages_stitch_src_typecandidates_",isDocsHomePage:!1,title:"_packages_stitch_src_typecandidates_",description:"@graphql-tools/utils",source:"@site/docs/api/modules/_packages_stitch_src_typecandidates_.md",slug:"/api/modules/_packages_stitch_src_typecandidates_",permalink:"/docs/api/modules/_packages_stitch_src_typecandidates_",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/modules/_packages_stitch_src_typecandidates_.md",version:"current"},i=[{value:"Index",id:"index",children:[{value:"Type aliases",id:"type-aliases",children:[]},{value:"Functions",id:"functions",children:[]}]},{value:"Type aliases",id:"type-aliases-1",children:[{value:"CandidateSelector",id:"candidateselector",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"addTypeCandidate",id:"addtypecandidate",children:[]},{value:"buildTypeCandidates",id:"buildtypecandidates",children:[]},{value:"buildTypes",id:"buildtypes",children:[]},{value:"onTypeConflictToCandidateSelector",id:"ontypeconflicttocandidateselector",children:[]},{value:"setOperationTypeNames",id:"setoperationtypenames",children:[]}]}],b={toc:i};function d(e){var t=e.components,a=Object(c.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"strong"},{href:"../README"}),"@graphql-tools/utils"))),Object(r.b)("h1",{id:"module-packagesstitchsrctypecandidates"},'Module: "packages/stitch/src/typeCandidates"'),Object(r.b)("h2",{id:"index"},"Index"),Object(r.b)("h3",{id:"type-aliases"},"Type aliases"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_stitch_src_typecandidates_#candidateselector"}),"CandidateSelector"))),Object(r.b)("h3",{id:"functions"},"Functions"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_stitch_src_typecandidates_#addtypecandidate"}),"addTypeCandidate")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_stitch_src_typecandidates_#buildtypecandidates"}),"buildTypeCandidates")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_stitch_src_typecandidates_#buildtypes"}),"buildTypes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_stitch_src_typecandidates_#ontypeconflicttocandidateselector"}),"onTypeConflictToCandidateSelector")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_stitch_src_typecandidates_#setoperationtypenames"}),"setOperationTypeNames"))),Object(r.b)("h2",{id:"type-aliases-1"},"Type aliases"),Object(r.b)("h3",{id:"candidateselector"},"CandidateSelector"),Object(r.b)("p",null,"\u01ac  ",Object(r.b)("strong",{parentName:"p"},"CandidateSelector"),": (candidates: Array","<",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"),"\\",">",") =",">"," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/typeCandidates.ts#L23"}),"packages/stitch/src/typeCandidates.ts:23"))),Object(r.b)("h2",{id:"functions-1"},"Functions"),Object(r.b)("h3",{id:"addtypecandidate"},"addTypeCandidate"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"addTypeCandidate"),"(",Object(r.b)("inlineCode",{parentName:"p"},"typeCandidates"),": Record","<","string, Array","<",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"),"\\",">","\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"name"),": string, ",Object(r.b)("inlineCode",{parentName:"p"},"typeCandidate"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"),"): void"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/typeCandidates.ts#L164"}),"packages/stitch/src/typeCandidates.ts:164"))),Object(r.b)("h4",{id:"parameters"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeCandidates")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record","<","string, Array","<",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"),"\\",">","\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"name")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeCandidate")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," void"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"buildtypecandidates"},"buildTypeCandidates"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"buildTypeCandidates"),"(",Object(r.b)("inlineCode",{parentName:"p"},"__namedParameters"),": { directiveMap: Record","<","string, GraphQLDirective\\",">"," ; extensions: DocumentNode[] ; mergeDirectives: boolean ; operationTypeNames: Record","<","string, any\\",">"," ; originalSubschemaMap: Map","<",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema"),"<","any, any, any\\",">",", GraphQLSchema ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_delegate_src_types_.subschemaconfig"}),"SubschemaConfig"),"<","any, any, any\\",">","\\",">"," ; parseOptions: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.graphqlparseoptions"}),"GraphQLParseOptions")," ; schemaDefs: { schemaDef: SchemaDefinitionNode ; schemaExtensions: Array","<","SchemaExtensionNode\\",">","  } ; subschemas: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema"),"<","any, any, any\\",">","[] ; typeDefs: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#itypedefinitions"}),"ITypeDefinitions")," ; types: GraphQLNamedType[]  }): Record","<","string, Array","<",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"),"\\",">","\\",">"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/typeCandidates.ts#L25"}),"packages/stitch/src/typeCandidates.ts:25"))),Object(r.b)("h4",{id:"parameters-1"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"__namedParameters")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"{ directiveMap: Record","<","string, GraphQLDirective\\",">"," ; extensions: DocumentNode[] ; mergeDirectives: boolean ; operationTypeNames: Record","<","string, any\\",">"," ; originalSubschemaMap: Map","<",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema"),"<","any, any, any\\",">",", GraphQLSchema ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_delegate_src_types_.subschemaconfig"}),"SubschemaConfig"),"<","any, any, any\\",">","\\",">"," ; parseOptions: ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.graphqlparseoptions"}),"GraphQLParseOptions")," ; schemaDefs: { schemaDef: SchemaDefinitionNode ; schemaExtensions: Array","<","SchemaExtensionNode\\",">","  } ; subschemas: ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema"),"<","any, any, any\\",">","[] ; typeDefs: ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#itypedefinitions"}),"ITypeDefinitions")," ; types: GraphQLNamedType[]  }")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," Record","<","string, Array","<",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"),"\\",">","\\",">"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"buildtypes"},"buildTypes"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"buildTypes"),"(",Object(r.b)("inlineCode",{parentName:"p"},"__namedParameters"),": { directives: GraphQLDirective[] ; mergeTypes: false ","|"," true ","|"," string[] ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/_packages_stitch_src_types_#mergetypefilter"}),"MergeTypeFilter")," ; onTypeConflict: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/_packages_stitch_src_types_#ontypeconflict"}),"OnTypeConflict")," ; operationTypeNames: Record","<","string, any\\",">"," ; stitchingInfo: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.stitchinginfo"}),"StitchingInfo")," ; typeCandidates: Record","<","string, ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"),"[]\\",">"," ; typeMergingOptions: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.typemergingoptions"}),"TypeMergingOptions"),"  }): object"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/typeCandidates.ts#L175"}),"packages/stitch/src/typeCandidates.ts:175"))),Object(r.b)("h4",{id:"parameters-2"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"__namedParameters")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"{ directives: GraphQLDirective[] ; mergeTypes: false ","|"," true ","|"," string[] ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/modules/_packages_stitch_src_types_#mergetypefilter"}),"MergeTypeFilter")," ; onTypeConflict: ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/modules/_packages_stitch_src_types_#ontypeconflict"}),"OnTypeConflict")," ; operationTypeNames: Record","<","string, any\\",">"," ; stitchingInfo: ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.stitchinginfo"}),"StitchingInfo")," ; typeCandidates: Record","<","string, ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}),"MergeTypeCandidate"),"[]\\",">"," ; typeMergingOptions: ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_stitch_src_types_.typemergingoptions"}),"TypeMergingOptions"),"  }")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," object"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"directives")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Array","<","GraphQLDirective\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeMap")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#typemap"}),"TypeMap"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"ontypeconflicttocandidateselector"},"onTypeConflictToCandidateSelector"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"onTypeConflictToCandidateSelector"),"(",Object(r.b)("inlineCode",{parentName:"p"},"onTypeConflict"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/_packages_stitch_src_types_#ontypeconflict"}),"OnTypeConflict"),"): ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/_packages_stitch_src_typecandidates_#candidateselector"}),"CandidateSelector")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/typeCandidates.ts#L217"}),"packages/stitch/src/typeCandidates.ts:217"))),Object(r.b)("h4",{id:"parameters-3"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"onTypeConflict")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/modules/_packages_stitch_src_types_#ontypeconflict"}),"OnTypeConflict"))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/_packages_stitch_src_typecandidates_#candidateselector"}),"CandidateSelector")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"setoperationtypenames"},"setOperationTypeNames"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setOperationTypeNames"),"(",Object(r.b)("inlineCode",{parentName:"p"},"__namedParameters"),": { schemaDef: SchemaDefinitionNode ; schemaExtensions: SchemaExtensionNode[]  }, ",Object(r.b)("inlineCode",{parentName:"p"},"operationTypeNames"),": Record","<","string, any\\",">","): void"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/typeCandidates.ts#L140"}),"packages/stitch/src/typeCandidates.ts:140"))),Object(r.b)("h4",{id:"parameters-4"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"__namedParameters")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"{ schemaDef: SchemaDefinitionNode ; schemaExtensions: SchemaExtensionNode[]  }")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"operationTypeNames")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record","<","string, any\\",">")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," void"))}d.isMDXComponent=!0},552:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return O}));var n=a(0),c=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var b=c.a.createContext({}),d=function(e){var t=c.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},l=function(e){var t=d(e.components);return c.a.createElement(b.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},m=c.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),l=d(a),m=n,O=l["".concat(s,".").concat(m)]||l[m]||o[m]||r;return a?c.a.createElement(O,p(p({ref:t},b),{},{components:a})):c.a.createElement(O,p({ref:t},b))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:n,s[1]=p;for(var b=2;b<r;b++)s[b]=a[b];return c.a.createElement.apply(null,s)}return c.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);
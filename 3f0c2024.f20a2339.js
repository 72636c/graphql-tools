(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{104:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return s}));var a=t(3),r=t(7),i=(t(0),t(207)),l={id:"_graphql_tag_pluck_src_index_.graphqltagpluckoptions",title:"GraphQLTagPluckOptions",sidebar_label:"GraphQLTagPluckOptions"},o={unversionedId:"api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions",id:"api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions",isDocsHomePage:!1,title:"GraphQLTagPluckOptions",description:"Additional options for determining how a file is parsed.",source:"@site/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions.md",slug:"/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions",permalink:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions.md",version:"current",sidebar_label:"GraphQLTagPluckOptions",sidebar:"someSidebar",previous:{title:"GraphQLParseOptions",permalink:"/docs/api/interfaces/_utils_src_index_.graphqlparseoptions"},next:{title:"IAddResolversToSchemaOptions",permalink:"/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions"}},p=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"<code>Optional</code> globalGqlIdentifierName",id:"optional-globalgqlidentifiername",children:[]},{value:"<code>Optional</code> gqlMagicComment",id:"optional-gqlmagiccomment",children:[]},{value:"<code>Optional</code> modules",id:"optional-modules",children:[]},{value:"<code>Optional</code> skipIndent",id:"optional-skipindent",children:[]}]}],c={rightToc:p};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Additional options for determining how a file is parsed."),Object(i.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"GraphQLTagPluckOptions"))),Object(i.b)("h2",{id:"index"},"Index"),Object(i.b)("h3",{id:"properties"},"Properties"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions#optional-globalgqlidentifiername"}),"globalGqlIdentifierName")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions#optional-gqlmagiccomment"}),"gqlMagicComment")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions#optional-modules"}),"modules")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions#optional-skipindent"}),"skipIndent"))),Object(i.b)("h2",{id:"properties-1"},"Properties"),Object(i.b)("h3",{id:"optional-globalgqlidentifiername"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," globalGqlIdentifierName"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"globalGqlIdentifierName"),"? : ",Object(i.b)("em",{parentName:"p"},"string | string[]")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L100"}),"packages/graphql-tag-pluck/src/index.ts:100"))),Object(i.b)("p",null,"Allows to use a global identifier instead of a module import."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// `graphql` is a global function\nexport const usersQuery = graphql`\n  {\n    users {\n      id\n      name\n    }\n  }\n`;\n")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-gqlmagiccomment"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," gqlMagicComment"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"gqlMagicComment"),"? : ",Object(i.b)("em",{parentName:"p"},"string")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L85"}),"packages/graphql-tag-pluck/src/index.ts:85"))),Object(i.b)("p",null,"The magic comment anchor to look for when parsing GraphQL strings. Defaults to ",Object(i.b)("inlineCode",{parentName:"p"},"graphql"),"."),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-modules"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," modules"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"modules"),"? : ",Object(i.b)("em",{parentName:"p"},"Array\u2039object\u203a")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L81"}),"packages/graphql-tag-pluck/src/index.ts:81"))),Object(i.b)("p",null,"Additional options for determining how a file is parsed.An array of packages that are responsible for exporting the GraphQL string parser function. The following modules are supported by default:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"{\n  modules: [\n    {\n      // import gql from 'graphql-tag'\n      name: 'graphql-tag',\n    },\n    {\n      name: 'graphql-tag.macro',\n    },\n    {\n      // import { graphql } from 'gatsby'\n      name: 'gatsby',\n      identifier: 'graphql',\n    },\n    {\n      name: 'apollo-server-express',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server',\n      identifier: 'gql',\n    },\n    {\n      name: 'react-relay',\n      identifier: 'graphql',\n    },\n    {\n      name: 'apollo-boost',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-koa',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-hapi',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-fastify',\n      identifier: 'gql',\n    },\n    {\n      name: ' apollo-server-lambda',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-micro',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-azure-functions',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-cloud-functions',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-cloudflare',\n      identifier: 'gql',\n    },\n  ];\n}\n")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-skipindent"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," skipIndent"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"skipIndent"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L104"}),"packages/graphql-tag-pluck/src/index.ts:104"))),Object(i.b)("p",null,"Set to ",Object(i.b)("inlineCode",{parentName:"p"},"true")," in order to get the found documents as-is, without any changes indentation changes"))}s.isMDXComponent=!0},207:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),s=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},b=function(e){var n=s(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},g=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),b=s(t),g=a,u=b["".concat(l,".").concat(g)]||b[g]||d[g]||i;return t?r.a.createElement(u,o(o({ref:n},c),{},{components:t})):r.a.createElement(u,o({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=g;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);
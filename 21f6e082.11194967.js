(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{145:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return a})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(1),o=t(9),s=(t(0),t(170)),i={id:"resolvers-composition",title:"Resolvers composition",sidebar_label:"Resolvers composition"},a={id:"resolvers-composition",title:"Resolvers composition",description:"Composition tool for GraphQL, with helpers to combine multiple resolvers into one, specify dependencies between fields, and more.",source:"@site/docs/resolvers-composition.md",permalink:"/docs/resolvers-composition",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/resolvers-composition.md",sidebar_label:"Resolvers composition",sidebar:"someSidebar",previous:{title:"Resolvers",permalink:"/docs/resolvers"},next:{title:"Custom scalars and enums",permalink:"/docs/scalars"}},c=[],l={rightToc:c};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Composition tool for GraphQL, with helpers to combine multiple resolvers into one, specify dependencies between fields, and more."),Object(s.b)("p",null,"When developing a GraphQL server, it is common to perform some authorization logic on your resolvers, usually based on the context of a request. With Resolvers Composition you can easily accomplish that and still make the code decoupled - thus testable - by combining multiple single-logic resolvers into one."),Object(s.b)("p",null,"The following is an example of a simple logged-in authorization logic:"),Object(s.b)("p",null,"Instead of doing this,"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const resolvers ={\n    Query: {\n        myQuery: (root, args, context) => {\n            // Make sure that the user is authenticated\n            if (!context.currentUser) {\n                throw new Error('You are not authenticated!');\n            }\n\n            // Make sure that the user has the correct roles\n            if (!context.currentUser.roles || context.currentUser.roles.includes('EDITOR')) {\n                throw new Error('You are not authorized!');\n            }\n\n            // Business logic\n            if (args.something === '1') {\n                return true;\n            }\n\n            return false;\n        },\n    },\n};\n")),Object(s.b)("p",null,"You can do;"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const { composeResolvers } = require('@graphql-toolkit/common');\n\nconst resolvers ={\n    Query: {\n        myQuery: (root, args, context) => {\n            if (args.something === '1') {\n                return true;\n            }\n\n            return false;\n        },\n    },\n};\n\nconst isAuthenticated = () => next => async (root, args, context, info) => {\n    if (!context.currentUser) {\n        throw new Error('You are not authenticated!');\n    }\n\n    return next(root, args, context, info);\n};\n\nconst hasRole = (role: string) => next => async (root, args, context, info) => {\n    if (!context.currentUser.roles || context.currentUser.roles.includes(role)) {\n        throw new Error('You are not authorized!');\n    }\n\n    return next(root, args, context, info);\n};\n\nconst resolversComposition = {\n    'Query.myQuery': [isAuthenticated(), hasRole('EDITOR')],\n};\n\nconst composedResolvers = composeResolvers(resolvers, resolversComposition);\n")),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"composeResolvers")," is a method in ",Object(s.b)("inlineCode",{parentName:"p"},"@graphql-toolkit/common")," package that accepts ",Object(s.b)("inlineCode",{parentName:"p"},"IResolvers")," object and mappings for composition functions that would be run before resolver itself."))}u.isMDXComponent=!0},170:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),o=t.n(r);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a({},n,{},e)),t},p=function(e){var n=u(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,b=p["".concat(i,".").concat(d)]||p[d]||m[d]||s;return t?o.a.createElement(b,a({ref:n},l,{components:t})):o.a.createElement(b,a({ref:n},l))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=d;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var l=2;l<s;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);
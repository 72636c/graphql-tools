(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{152:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(1),a=t(9),o=(t(0),t(168)),i={id:"schema-loading",title:"Loading schemas",sidebar_label:"Loading schemas"},l={id:"schema-loading",title:"Loading schemas",description:"These utils are useful for scanning, loading and building a GraphQL schema from any input.",source:"@site/docs/schema-loading.md",permalink:"/docs/schema-loading",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/schema-loading.md",sidebar_label:"Loading schemas",sidebar:"someSidebar",previous:{title:"Setup an HTTP server",permalink:"/docs/server-setup"},next:{title:"Loading documents",permalink:"/docs/documents-loading"}},c=[{value:"Usage",id:"usage",children:[]}],s={rightToc:c};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"These utils are useful for scanning, loading and building a GraphQL schema from any input."),Object(o.b)("p",null,"You can specify a GraphQL endpoint, local introspection JSON file, code file that ",Object(o.b)("inlineCode",{parentName:"p"},"export"),"s a GraphQLSchema, AST string and ",Object(o.b)("inlineCode",{parentName:"p"},".graphql")," files (with support for ",Object(o.b)("inlineCode",{parentName:"p"},"glob")," expression)."),Object(o.b)("p",null,"All found schema files can be merged into a complete schema. There is support for ",Object(o.b)("inlineCode",{parentName:"p"},"#import")," syntax (formerly known as ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-import"}),Object(o.b)("inlineCode",{parentName:"a"},"graphql-import")),")."),Object(o.b)("p",null,"The user is given the option of implementing their own loader (implement the interface ",Object(o.b)("inlineCode",{parentName:"p"},"SchemaLoader"),")."),Object(o.b)("p",null,"The schema loading util is using loaders, and implemented using ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern"}),"chain-of-responsibility pattern"),"."),Object(o.b)("p",null,"Specifiying the loader is not necessary. The user need only provide the inputs. The utils will detect it automatically."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"const { loadSchema } = require('@graphql-toolkit/core');\nconst { UrlLoader } = require('@graphql-toolkit/url-loader');\nconst { JsonFileLoader } = require('@graphql-toolkit/json-file-loader');\nconst { GraphQLFileLoader } = require('@graphql-toolkit/graphql-file-loader');\n\nconst schema1 = loadSchema('type A { foo: String }');   // load from string w/ no loaders\n\nconst schema2 = loadSchema('http://localhost:3000/graphql', {   // load from endpoint\n    loaders: [\n        new UrlLoader()\n    ]\n});\n\nconst schema3 = loadSchema('./schema.json', {   // load from local json file\n    loaders: [\n        new JsonFileLoader()\n    ]\n});\n\nconst schema4 = loadSchema('schema.graphql', {  // load from a single schema file\n    loaders: [\n        new GraphQLFileLoader()\n    ]\n});\n\nconst schema5 = loadSchema('./src/**/*.graphql', { // load from multiple files using glob\n    loaders: [\n        new GraphQLFileLoader()\n    ]\n});\n")))}p.isMDXComponent=!0},168:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return h}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),p=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l({},n,{},e)),t},d=function(e){var n=p(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,h=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return t?a.a.createElement(h,l({ref:n},s,{components:t})):a.a.createElement(h,l({ref:n},s))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);
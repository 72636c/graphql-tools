(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{244:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return m}));var n=a(3),c=a(7),r=(a(0),a(552)),b={},o={unversionedId:"api/modules/_packages_mock_src_mocking_",id:"api/modules/_packages_mock_src_mocking_",isDocsHomePage:!1,title:"_packages_mock_src_mocking_",description:"@graphql-tools/utils",source:"@site/docs/api/modules/_packages_mock_src_mocking_.md",slug:"/api/modules/_packages_mock_src_mocking_",permalink:"/docs/api/modules/_packages_mock_src_mocking_",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/modules/_packages_mock_src_mocking_.md",version:"current"},l=[{value:"Index",id:"index",children:[{value:"Classes",id:"classes",children:[]},{value:"Variables",id:"variables",children:[]},{value:"Functions",id:"functions",children:[]}]},{value:"Variables",id:"variables-1",children:[{value:"defaultMockMap",id:"defaultmockmap",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"addMocksToSchema",id:"addmockstoschema",children:[]},{value:"copyOwnProps",id:"copyownprops",children:[]},{value:"copyOwnPropsIfNotPresent",id:"copyownpropsifnotpresent",children:[]},{value:"getRandomElement",id:"getrandomelement",children:[]},{value:"isObject",id:"isobject",children:[]},{value:"mergeMocks",id:"mergemocks",children:[]},{value:"mergeObjects",id:"mergeobjects",children:[]},{value:"mockServer",id:"mockserver",children:[]},{value:"uuidv4",id:"uuidv4",children:[]}]}],p={toc:l};function m(e){var t=e.components,a=Object(c.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"strong"},{href:"../README"}),"@graphql-tools/utils"))),Object(r.b)("h1",{id:"module-packagesmocksrcmocking"},'Module: "packages/mock/src/mocking"'),Object(r.b)("h2",{id:"index"},"Index"),Object(r.b)("h3",{id:"classes"},"Classes"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/classes/_packages_mock_src_mocking_.mocklist"}),"MockList"))),Object(r.b)("h3",{id:"variables"},"Variables"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#defaultmockmap"}),"defaultMockMap"))),Object(r.b)("h3",{id:"functions"},"Functions"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#addmockstoschema"}),"addMocksToSchema")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#copyownprops"}),"copyOwnProps")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#copyownpropsifnotpresent"}),"copyOwnPropsIfNotPresent")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#getrandomelement"}),"getRandomElement")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#isobject"}),"isObject")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#mergemocks"}),"mergeMocks")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#mergeobjects"}),"mergeObjects")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#mockserver"}),"mockServer")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_mock_src_mocking_#uuidv4"}),"uuidv4"))),Object(r.b)("h2",{id:"variables-1"},"Variables"),Object(r.b)("h3",{id:"defaultmockmap"},"defaultMockMap"),Object(r.b)("p",null,"\u2022 ",Object(r.b)("inlineCode",{parentName:"p"},"Const")," ",Object(r.b)("strong",{parentName:"p"},"defaultMockMap"),": Map","<","string, ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/_packages_mock_src_types_#imockfn"}),"IMockFn"),"\\",">"," = new Map()"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L66"}),"packages/mock/src/mocking.ts:66"))),Object(r.b)("h2",{id:"functions-1"},"Functions"),Object(r.b)("h3",{id:"addmockstoschema"},"addMocksToSchema"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"addMocksToSchema"),"(",Object(r.b)("inlineCode",{parentName:"p"},"__namedParameters"),": { mocks: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_mock_src_types_.imocks"}),"IMocks")," ; preserveResolvers: boolean = false; schema: GraphQLSchema  }): GraphQLSchema"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L82"}),"packages/mock/src/mocking.ts:82"))),Object(r.b)("p",null,"Given an instance of GraphQLSchema and a mock object, returns a new schema\nthat can return mock data for any valid query that is sent to the server."),Object(r.b)("h4",{id:"parameters"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"__namedParameters")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"{ mocks: ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_mock_src_types_.imocks"}),"IMocks")," ; preserveResolvers: boolean = false; schema: GraphQLSchema  }")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," GraphQLSchema"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"copyownprops"},"copyOwnProps"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"copyOwnProps"),"(",Object(r.b)("inlineCode",{parentName:"p"},"target"),": Record","<","string, any\\",">",", ...",Object(r.b)("inlineCode",{parentName:"p"},"sources"),": Array","<","Record","<","string, any\\",">","\\",">","): Record","<","string, any\\",">"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L355"}),"packages/mock/src/mocking.ts:355"))),Object(r.b)("h4",{id:"parameters-1"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"target")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record","<","string, any\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"...sources")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Array","<","Record","<","string, any\\",">","\\",">")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," Record","<","string, any\\",">"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"copyownpropsifnotpresent"},"copyOwnPropsIfNotPresent"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"copyOwnPropsIfNotPresent"),"(",Object(r.b)("inlineCode",{parentName:"p"},"target"),": Record","<","string, any\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"source"),": Record","<","string, any\\",">","): void"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L346"}),"packages/mock/src/mocking.ts:346"))),Object(r.b)("h4",{id:"parameters-2"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"target")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record","<","string, any\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"source")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record","<","string, any\\",">")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," void"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getrandomelement"},"getRandomElement"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getRandomElement"),"(",Object(r.b)("inlineCode",{parentName:"p"},"ary"),": ReadonlyArray","<","any\\",">","): any"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L337"}),"packages/mock/src/mocking.ts:337"))),Object(r.b)("h4",{id:"parameters-3"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ary")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ReadonlyArray","<","any\\",">")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," any"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isobject"},"isObject"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isObject"),"(",Object(r.b)("inlineCode",{parentName:"p"},"thing"),": any): boolean"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L332"}),"packages/mock/src/mocking.ts:332"))),Object(r.b)("h4",{id:"parameters-4"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"thing")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," boolean"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"mergemocks"},"mergeMocks"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"mergeMocks"),"(",Object(r.b)("inlineCode",{parentName:"p"},"genericMockFunction"),": () =",">"," any, ",Object(r.b)("inlineCode",{parentName:"p"},"customMock"),": any): any"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L370"}),"packages/mock/src/mocking.ts:370"))),Object(r.b)("h4",{id:"parameters-5"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"genericMockFunction")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"() =",">"," any")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"customMock")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," any"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"mergeobjects"},"mergeObjects"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"mergeObjects"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a"),": Record","<","string, any\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"b"),": Record","<","string, any\\",">","): Record","<","string, any\\",">"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L342"}),"packages/mock/src/mocking.ts:342"))),Object(r.b)("h4",{id:"parameters-6"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record","<","string, any\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"b")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record","<","string, any\\",">")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," Record","<","string, any\\",">"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"mockserver"},"mockServer"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"mockServer"),"(",Object(r.b)("inlineCode",{parentName:"p"},"schema"),": GraphQLSchema ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#itypedefinitions"}),"ITypeDefinitions"),", ",Object(r.b)("inlineCode",{parentName:"p"},"mocks"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_mock_src_types_.imocks"}),"IMocks"),", ",Object(r.b)("inlineCode",{parentName:"p"},"preserveResolvers?"),": boolean): ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_mock_src_types_.imockserver"}),"IMockServer")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L39"}),"packages/mock/src/mocking.ts:39"))),Object(r.b)("p",null,"A convenience wrapper on top of addMocksToSchema. It adds your mock resolvers\nto your schema and returns a client that will correctly execute your query with\nvariables. Note: when executing queries from the returned server, context and\nroot will both equal ",Object(r.b)("inlineCode",{parentName:"p"},"{}"),"."),Object(r.b)("h4",{id:"parameters-7"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default value"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"schema")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GraphQLSchema ","|"," ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#itypedefinitions"}),"ITypeDefinitions")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The schema to which to add mocks. This can also be a set of type definitions instead.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"mocks")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_mock_src_types_.imocks"}),"IMocks")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The mocks to add to the schema.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"preserveResolvers")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Set to ",Object(r.b)("inlineCode",{parentName:"td"},"true")," to prevent existing resolvers from being overwritten to provide mock data. This can be used to mock some parts of the server and not others.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_mock_src_types_.imockserver"}),"IMockServer")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"uuidv4"},"uuidv4"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"uuidv4"),"(): string"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L57"}),"packages/mock/src/mocking.ts:57"))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," string"))}m.isMDXComponent=!0},552:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return j}));var n=a(0),c=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var p=c.a.createContext({}),m=function(e){var t=c.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=m(e.components);return c.a.createElement(p.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},O=c.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,b=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=m(a),O=n,j=s["".concat(b,".").concat(O)]||s[O]||i[O]||r;return a?c.a.createElement(j,o(o({ref:t},p),{},{components:a})):c.a.createElement(j,o({ref:t},p))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,b=new Array(r);b[0]=O;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,b[1]=o;for(var p=2;p<r;p++)b[p]=a[p];return c.a.createElement.apply(null,b)}return c.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);
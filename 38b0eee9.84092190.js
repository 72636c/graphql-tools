(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{178:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return b})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),c=(n(0),n(552)),l={},b={unversionedId:"api/modules/_packages_utils_src_collectfields_",id:"api/modules/_packages_utils_src_collectfields_",isDocsHomePage:!1,title:"_packages_utils_src_collectfields_",description:"@graphql-tools/utils",source:"@site/docs/api/modules/_packages_utils_src_collectfields_.md",slug:"/api/modules/_packages_utils_src_collectfields_",permalink:"/docs/api/modules/_packages_utils_src_collectfields_",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/modules/_packages_utils_src_collectfields_.md",version:"current"},i=[{value:"Index",id:"index",children:[{value:"Functions",id:"functions",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"doesFragmentConditionMatch",id:"doesfragmentconditionmatch",children:[]},{value:"getFieldEntryKey",id:"getfieldentrykey",children:[]},{value:"shouldIncludeNode",id:"shouldincludenode",children:[]}]}],o={toc:i};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(a.a)({parentName:"strong"},{href:"../README"}),"@graphql-tools/utils"))),Object(c.b)("h1",{id:"module-packagesutilssrccollectfields"},'Module: "packages/utils/src/collectFields"'),Object(c.b)("h2",{id:"index"},"Index"),Object(c.b)("h3",{id:"functions"},"Functions"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/modules/_packages_utils_src_collectfields_#doesfragmentconditionmatch"}),"doesFragmentConditionMatch")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/modules/_packages_utils_src_collectfields_#getfieldentrykey"}),"getFieldEntryKey")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/modules/_packages_utils_src_collectfields_#shouldincludenode"}),"shouldIncludeNode"))),Object(c.b)("h2",{id:"functions-1"},"Functions"),Object(c.b)("h3",{id:"doesfragmentconditionmatch"},"doesFragmentConditionMatch"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"doesFragmentConditionMatch"),"(",Object(c.b)("inlineCode",{parentName:"p"},"exeContext"),": ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.graphqlexecutioncontext"}),"GraphQLExecutionContext"),", ",Object(c.b)("inlineCode",{parentName:"p"},"fragment"),": FragmentDefinitionNode ","|"," InlineFragmentNode, ",Object(c.b)("inlineCode",{parentName:"p"},"type"),": GraphQLObjectType): boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/collectFields.ts#L102"}),"packages/utils/src/collectFields.ts:102"))),Object(c.b)("p",null,"Determines if a fragment is applicable to the given type."),Object(c.b)("h4",{id:"parameters"},"Parameters:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"exeContext")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.graphqlexecutioncontext"}),"GraphQLExecutionContext"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"fragment")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"FragmentDefinitionNode ","|"," InlineFragmentNode")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"type")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"GraphQLObjectType")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," boolean"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"getfieldentrykey"},"getFieldEntryKey"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getFieldEntryKey"),"(",Object(c.b)("inlineCode",{parentName:"p"},"node"),": FieldNode): string"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/collectFields.ts#L124"}),"packages/utils/src/collectFields.ts:124"))),Object(c.b)("p",null,"Implements the logic to compute the key of a given field's entry"),Object(c.b)("h4",{id:"parameters-1"},"Parameters:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"node")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"FieldNode")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," string"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"shouldincludenode"},"shouldIncludeNode"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"shouldIncludeNode"),"(",Object(c.b)("inlineCode",{parentName:"p"},"exeContext"),": ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.graphqlexecutioncontext"}),"GraphQLExecutionContext"),", ",Object(c.b)("inlineCode",{parentName:"p"},"node"),": FragmentSpreadNode ","|"," FieldNode ","|"," InlineFragmentNode): boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/collectFields.ts#L80"}),"packages/utils/src/collectFields.ts:80"))),Object(c.b)("p",null,"Determines if a field should be included based on the @include and @skip\ndirectives, where @skip has higher precedence than @include."),Object(c.b)("h4",{id:"parameters-2"},"Parameters:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"exeContext")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_utils_src_interfaces_.graphqlexecutioncontext"}),"GraphQLExecutionContext"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"node")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"FragmentSpreadNode ","|"," FieldNode ","|"," InlineFragmentNode")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," boolean"))}p.isMDXComponent=!0},552:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(l,".").concat(u)]||d[u]||s[u]||c;return n?r.a.createElement(m,b(b({ref:t},o),{},{components:n})):r.a.createElement(m,b({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=u;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:a,l[1]=b;for(var o=2;o<c;o++)l[o]=n[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{189:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var a=r(0),n=r.n(a);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),p=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o({},t,{},e)),r},b=function(e){var t=p(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(r),u=a,m=b["".concat(s,".").concat(u)]||b[u]||d[u]||i;return r?n.a.createElement(m,o({ref:t},c,{components:r})):n.a.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.a.createElement.apply(null,s)}return n.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},58:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return p}));var a=r(2),n=r(6),i=(r(0),r(189)),s={id:"_utils_src_index_.iaddresolverstoschemaoptions",title:"IAddResolversToSchemaOptions",sidebar_label:"IAddResolversToSchemaOptions"},o={unversionedId:"api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions",id:"api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions",isDocsHomePage:!1,title:"IAddResolversToSchemaOptions",description:"Configuration object for adding resolvers to a schema",source:"@site/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions.md",permalink:"/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions.md",sidebar_label:"IAddResolversToSchemaOptions",sidebar:"someSidebar",previous:{title:"GraphQLTagPluckOptions",permalink:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions"},next:{title:"IDirectiveResolvers",permalink:"/docs/api/interfaces/_utils_src_index_.idirectiveresolvers"}},l=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"<code>Optional</code> defaultFieldResolver",id:"optional-defaultfieldresolver",children:[]},{value:"<code>Optional</code> inheritResolversFromInterfaces",id:"optional-inheritresolversfrominterfaces",children:[]},{value:"<code>Optional</code> resolverValidationOptions",id:"optional-resolvervalidationoptions",children:[]},{value:"resolvers",id:"resolvers",children:[]},{value:"schema",id:"schema",children:[]},{value:"<code>Optional</code> updateResolversInPlace",id:"optional-updateresolversinplace",children:[]}]}],c={rightToc:l};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Configuration object for adding resolvers to a schema"),Object(i.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"IAddResolversToSchemaOptions"))),Object(i.b)("h2",{id:"index"},"Index"),Object(i.b)("h3",{id:"properties"},"Properties"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions#optional-defaultfieldresolver"}),"defaultFieldResolver")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions#optional-inheritresolversfrominterfaces"}),"inheritResolversFromInterfaces")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions#optional-resolvervalidationoptions"}),"resolverValidationOptions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions#resolvers"}),"resolvers")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions#schema"}),"schema")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.iaddresolverstoschemaoptions#optional-updateresolversinplace"}),"updateResolversInPlace"))),Object(i.b)("h2",{id:"properties-1"},"Properties"),Object(i.b)("h3",{id:"optional-defaultfieldresolver"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," defaultFieldResolver"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"defaultFieldResolver"),"? : ",Object(i.b)("em",{parentName:"p"},Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"/docs/api/modules/utils#ifieldresolver"}),"IFieldResolver"),"\u2039any, any\u203a")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L133"}),"packages/utils/src/Interfaces.ts:133"))),Object(i.b)("p",null,"Override the default field resolver provided by ",Object(i.b)("inlineCode",{parentName:"p"},"graphql-js")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-inheritresolversfrominterfaces"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," inheritResolversFromInterfaces"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"inheritResolversFromInterfaces"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L142"}),"packages/utils/src/Interfaces.ts:142"))),Object(i.b)("p",null,"GraphQL object types that implement interfaces will inherit any missing\nresolvers from their interface types defined in the ",Object(i.b)("inlineCode",{parentName:"p"},"resolvers")," object"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-resolvervalidationoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," resolverValidationOptions"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"resolverValidationOptions"),"? : ",Object(i.b)("em",{parentName:"p"},Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"_utils_src_index_.iresolvervalidationoptions"}),"IResolverValidationOptions"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L137"}),"packages/utils/src/Interfaces.ts:137"))),Object(i.b)("p",null,"Additional options for validating the provided resolvers"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"resolvers"},"resolvers"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"resolvers"),": ",Object(i.b)("em",{parentName:"p"},Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"/docs/api/modules/utils#iresolvers"}),"IResolvers"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L129"}),"packages/utils/src/Interfaces.ts:129"))),Object(i.b)("p",null,"Object describing the field resolvers to add to the provided schema"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"schema"},"schema"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"schema"),": ",Object(i.b)("em",{parentName:"p"},"GraphQLSchema")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L125"}),"packages/utils/src/Interfaces.ts:125"))),Object(i.b)("p",null,"The schema to which to add resolvers"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-updateresolversinplace"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," updateResolversInPlace"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"updateResolversInPlace"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L146"}),"packages/utils/src/Interfaces.ts:146"))),Object(i.b)("p",null,"Set to ",Object(i.b)("inlineCode",{parentName:"p"},"true")," to modify the existing schema instead of creating a new one"))}p.isMDXComponent=!0}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{179:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return o}));var a=n(2),r=n(6),l=(n(0),n(193)),c={id:"graphql-tag-pluck",title:"@graphql-tools/graphql-tag-pluck",sidebar_label:"graphql-tag-pluck"},b={unversionedId:"api/modules/graphql-tag-pluck",id:"api/modules/graphql-tag-pluck",isDocsHomePage:!1,title:"@graphql-tools/graphql-tag-pluck",description:"Interfaces",source:"@site/docs/api/modules/_graphql_tag_pluck_src_index_.md",permalink:"/docs/api/modules/graphql-tag-pluck",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/modules/_graphql_tag_pluck_src_index_.md",sidebar_label:"graphql-tag-pluck",sidebar:"someSidebar",previous:{title:"@graphql-tools/prisma-loader",permalink:"/docs/api/modules/prisma-loader"},next:{title:"@graphql-tools/utils",permalink:"/docs/api/modules/utils"}},i=[{value:"Interfaces",id:"interfaces",children:[]},{value:"Functions",id:"functions",children:[]},{value:"Functions",id:"functions-1",children:[{value:"<code>Const</code> gqlPluckFromCodeString",id:"const-gqlpluckfromcodestring",children:[]},{value:"<code>Const</code> gqlPluckFromCodeStringSync",id:"const-gqlpluckfromcodestringsync",children:[]}]}],p={rightToc:i};function o(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h3",{id:"interfaces"},"Interfaces"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions"}),"GraphQLTagPluckOptions"))),Object(l.b)("h3",{id:"functions"},"Functions"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/modules/graphql-tag-pluck#const-gqlpluckfromcodestring"}),"gqlPluckFromCodeString")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/modules/graphql-tag-pluck#const-gqlpluckfromcodestringsync"}),"gqlPluckFromCodeStringSync"))),Object(l.b)("h2",{id:"functions-1"},"Functions"),Object(l.b)("h3",{id:"const-gqlpluckfromcodestring"},Object(l.b)("inlineCode",{parentName:"h3"},"Const")," gqlPluckFromCodeString"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"gqlPluckFromCodeString"),"(",Object(l.b)("inlineCode",{parentName:"p"},"filePath"),": string, ",Object(l.b)("inlineCode",{parentName:"p"},"code"),": string, ",Object(l.b)("inlineCode",{parentName:"p"},"options"),": ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions"}),"GraphQLTagPluckOptions"),"): ",Object(l.b)("em",{parentName:"p"},"Promise\u2039string\u203a")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L121"}),"packages/graphql-tag-pluck/src/index.ts:121"))),Object(l.b)("p",null,"Asynchronously plucks GraphQL template literals from a single file."),Object(l.b)("p",null,"Supported file extensions include: ",Object(l.b)("inlineCode",{parentName:"p"},".js"),", ",Object(l.b)("inlineCode",{parentName:"p"},".jsx"),", ",Object(l.b)("inlineCode",{parentName:"p"},".ts"),", ",Object(l.b)("inlineCode",{parentName:"p"},".tsx"),", ",Object(l.b)("inlineCode",{parentName:"p"},".flow"),", ",Object(l.b)("inlineCode",{parentName:"p"},".flow.js"),", ",Object(l.b)("inlineCode",{parentName:"p"},".flow.jsx"),", ",Object(l.b)("inlineCode",{parentName:"p"},".vue")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"filePath")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to the file containing the code. Required to detect the file type")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"code")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The contents of the file being parsed.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"options")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions"}),"GraphQLTagPluckOptions")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"{}"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Additional options for determining how a file is parsed.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},"Promise\u2039string\u203a")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"const-gqlpluckfromcodestringsync"},Object(l.b)("inlineCode",{parentName:"h3"},"Const")," gqlPluckFromCodeStringSync"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"gqlPluckFromCodeStringSync"),"(",Object(l.b)("inlineCode",{parentName:"p"},"filePath"),": string, ",Object(l.b)("inlineCode",{parentName:"p"},"code"),": string, ",Object(l.b)("inlineCode",{parentName:"p"},"options"),": ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions"}),"GraphQLTagPluckOptions"),"): ",Object(l.b)("em",{parentName:"p"},"string")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L146"}),"packages/graphql-tag-pluck/src/index.ts:146"))),Object(l.b)("p",null,"Synchronously plucks GraphQL template literals from a single file"),Object(l.b)("p",null,"Supported file extensions include: ",Object(l.b)("inlineCode",{parentName:"p"},".js"),", ",Object(l.b)("inlineCode",{parentName:"p"},".jsx"),", ",Object(l.b)("inlineCode",{parentName:"p"},".ts"),", ",Object(l.b)("inlineCode",{parentName:"p"},".tsx"),", ",Object(l.b)("inlineCode",{parentName:"p"},".flow"),", ",Object(l.b)("inlineCode",{parentName:"p"},".flow.js"),", ",Object(l.b)("inlineCode",{parentName:"p"},".flow.jsx"),", ",Object(l.b)("inlineCode",{parentName:"p"},".vue")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"filePath")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to the file containing the code. Required to detect the file type")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"code")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The contents of the file being parsed.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"options")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/api/interfaces/_graphql_tag_pluck_src_index_.graphqltagpluckoptions"}),"GraphQLTagPluckOptions")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"{}"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Additional options for determining how a file is parsed.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},"string")))}o.isMDXComponent=!0},193:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),o=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):b({},t,{},e)),n},s=function(e){var t=o(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=o(n),u=a,O=s["".concat(c,".").concat(u)]||s[u]||d[u]||l;return n?r.a.createElement(O,b({ref:t},p,{components:n})):r.a.createElement(O,b({ref:t},p))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,c=new Array(l);c[0]=u;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:a,c[1]=b;for(var p=2;p<l;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);
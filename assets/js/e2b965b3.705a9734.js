(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{230:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return O}));var b=a(3),n=a(7),r=(a(0),a(258)),c={},l={unversionedId:"api/interfaces/mock_src.imockstore",id:"api/interfaces/mock_src.imockstore",isDocsHomePage:!1,title:"mock_src.imockstore",description:"Interface: IMockStore",source:"@site/docs/api/interfaces/mock_src.imockstore.md",slug:"/api/interfaces/mock_src.imockstore",permalink:"/docs/api/interfaces/mock_src.imockstore",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/mock_src.imockstore.md",version:"current",sidebar:"someSidebar",previous:{title:"mock_src.imockserver",permalink:"/docs/api/interfaces/mock_src.imockserver"},next:{title:"utils_src.iresolvervalidationoptions",permalink:"/docs/api/interfaces/utils_src.iresolvervalidationoptions"}},p=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Implemented by",id:"implemented-by",children:[]},{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"schema",id:"schema",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"get",id:"get",children:[]},{value:"set",id:"set",children:[]}]}],m={toc:p};function O(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(b.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"interface-imockstore"},"Interface: IMockStore"),Object(r.b)("p",null,Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"../modules/mock_src"}),"mock/src"),".IMockStore"),Object(r.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"IMockStore"))),Object(r.b)("h2",{id:"implemented-by"},"Implemented by"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(b.a)({parentName:"li"},{href:"/docs/api/classes/mock_src.mockstore"}),Object(r.b)("em",{parentName:"a"},"MockStore")))),Object(r.b)("h2",{id:"table-of-contents"},"Table of contents"),Object(r.b)("h3",{id:"properties"},"Properties"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(b.a)({parentName:"li"},{href:"/docs/api/interfaces/mock_src.imockstore#schema"}),"schema"))),Object(r.b)("h3",{id:"methods"},"Methods"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(b.a)({parentName:"li"},{href:"/docs/api/interfaces/mock_src.imockstore#get"}),"get")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(b.a)({parentName:"li"},{href:"/docs/api/interfaces/mock_src.imockstore#set"}),"set"))),Object(r.b)("h2",{id:"properties-1"},"Properties"),Object(r.b)("h3",{id:"schema"},"schema"),Object(r.b)("p",null,"\u2022 ",Object(r.b)("strong",{parentName:"p"},"schema"),": ",Object(r.b)("em",{parentName:"p"},"GraphQLSchema")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L69"}),"packages/mock/src/types.ts:69")),Object(r.b)("h2",{id:"methods-1"},"Methods"),Object(r.b)("h3",{id:"get"},"get"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"get"),"<","KeyT, ReturnKeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"args"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/api/modules/mock#getargs"}),Object(r.b)("em",{parentName:"a"},"GetArgs")),"<","KeyT\\",">","): ",Object(r.b)("em",{parentName:"p"},"unknown")),Object(r.b)("p",null,"Get a field value from the store for the given type, key and field\nname \u2014 and optionnally field arguments. If the field name is not given,\na reference to the type will be returned."),Object(r.b)("p",null,"If the the value for this field is not set, a value will be\ngenerated according to field return type and mock functions."),Object(r.b)("p",null,"If the field's output type is a ",Object(r.b)("inlineCode",{parentName:"p"},"ObjectType")," (or list of ",Object(r.b)("inlineCode",{parentName:"p"},"ObjectType"),"),\nit will return a ",Object(r.b)("inlineCode",{parentName:"p"},"Ref")," (or array of ",Object(r.b)("inlineCode",{parentName:"p"},"Ref"),"), ie a reference to an entity\nin the store."),Object(r.b)("p",null,"Example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(b.a)({parentName:"pre"},{className:"language-ts"}),"store.get('Query', 'ROOT', 'viewer');\n&gt; { $ref: { key: 'abc-737dh-djdjd', typeName: 'User' } }\nstore.get('User', 'abc-737dh-djdjd', 'name')\n&gt; \"Hello World\"\n")),Object(r.b)("h4",{id:"type-parameters"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ReturnKeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"args")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/api/modules/mock#getargs"}),Object(r.b)("em",{parentName:"a"},"GetArgs")),"<","KeyT\\",">")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"unknown")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L90"}),"packages/mock/src/types.ts:90")),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"get"),"<","KeyT, ReturnKeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("em",{parentName:"p"},"string"),", ",Object(r.b)("inlineCode",{parentName:"p"},"key"),": KeyT, ",Object(r.b)("inlineCode",{parentName:"p"},"fieldNameOrFieldNames"),": ",Object(r.b)("em",{parentName:"p"},"string")," ","|"," ",Object(r.b)("em",{parentName:"p"},"string"),"[], ",Object(r.b)("inlineCode",{parentName:"p"},"fieldArgs?"),": ",Object(r.b)("em",{parentName:"p"},"string")," ","|"," { ","[argName: string]",": ",Object(r.b)("em",{parentName:"p"},"any"),";  }): ",Object(r.b)("em",{parentName:"p"},"unknown")),Object(r.b)("p",null,"Shorthand for ",Object(r.b)("inlineCode",{parentName:"p"},"get({typeName, key, fieldName, fieldArgs})"),"."),Object(r.b)("h4",{id:"type-parameters-1"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ReturnKeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters-1"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"key")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"KeyT")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fieldNameOrFieldNames")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"string"),"[]")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fieldArgs?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," { ","[argName: string]",": ",Object(r.b)("em",{parentName:"td"},"any"),";  }")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"unknown")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L96"}),"packages/mock/src/types.ts:96")),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"get"),"<","KeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("em",{parentName:"p"},"string"),", ",Object(r.b)("inlineCode",{parentName:"p"},"keyOrDefaultValue?"),": KeyT ","|"," { ","[fieldName: string]",": ",Object(r.b)("em",{parentName:"p"},"any"),";  }, ",Object(r.b)("inlineCode",{parentName:"p"},"defaultValue?"),": { ","[fieldName: string]",": ",Object(r.b)("em",{parentName:"p"},"any"),";  }): ",Object(r.b)("em",{parentName:"p"},"unknown")),Object(r.b)("p",null,"Get a reference to the type."),Object(r.b)("h4",{id:"type-parameters-2"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters-2"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keyOrDefaultValue?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"KeyT ","|"," { ","[fieldName: string]",": ",Object(r.b)("em",{parentName:"td"},"any"),";  }")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"defaultValue?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"{ ","[fieldName: string]",": ",Object(r.b)("em",{parentName:"td"},"any"),";  }")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"unknown")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L105"}),"packages/mock/src/types.ts:105")),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"get"),"<","KeyT, ReturnKeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"ref"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/api/modules/mock#ref"}),Object(r.b)("em",{parentName:"a"},"Ref")),"<","KeyT\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"fieldNameOrFieldNames"),": ",Object(r.b)("em",{parentName:"p"},"string")," ","|"," ",Object(r.b)("em",{parentName:"p"},"string"),"[], ",Object(r.b)("inlineCode",{parentName:"p"},"fieldArgs?"),": ",Object(r.b)("em",{parentName:"p"},"string")," ","|"," { ","[argName: string]",": ",Object(r.b)("em",{parentName:"p"},"any"),";  }): ",Object(r.b)("em",{parentName:"p"},"unknown")),Object(r.b)("p",null,"Shorthand for ",Object(r.b)("inlineCode",{parentName:"p"},"get({typeName: ref.$ref.typeName, key: ref.$ref.key, fieldName, fieldArgs})")),Object(r.b)("h4",{id:"type-parameters-3"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ReturnKeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters-3"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ref")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/api/modules/mock#ref"}),Object(r.b)("em",{parentName:"a"},"Ref")),"<","KeyT\\",">"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fieldNameOrFieldNames")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"string"),"[]"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fieldArgs?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," { ","[argName: string]",": ",Object(r.b)("em",{parentName:"td"},"any"),";  }"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"unknown")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L117"}),"packages/mock/src/types.ts:117")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"set"},"set"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"set"),"<","KeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"args"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/api/modules/mock#setargs"}),Object(r.b)("em",{parentName:"a"},"SetArgs")),"<","KeyT\\",">","): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Set a field value in the store for the given type, key and field\nname \u2014 and optionnally field arguments."),Object(r.b)("p",null,"If the the field return type is an ",Object(r.b)("inlineCode",{parentName:"p"},"ObjectType")," or a list of\n",Object(r.b)("inlineCode",{parentName:"p"},"ObjectType"),", you can set references to other entity as value:"),Object(r.b)("pre",null,Object(r.b)("code",Object(b.a)({parentName:"pre"},{className:"language-ts"}),"// set the viewer name\nstore.set('User', 1, 'name', 'Alexandre);\nstore.set('Query', 'ROOT', 'viewer', store.get('User', 1));\n\n// set the friends of viewer\nstore.set('User', 2, 'name', 'Emily');\nstore.set('User', 3, 'name', 'Caroline');\nstore.set('User', 1, 'friends', [store.get('User', 2), store.get('User', 3)]);\n")),Object(r.b)("p",null,"But it also supports nested set:"),Object(r.b)("pre",null,Object(r.b)("code",Object(b.a)({parentName:"pre"},{className:"language-ts"}),"store.set('Query', 'ROOT', 'viewer', {\n name: 'Alexandre',\n friends: [\n   { name: 'Emily' }\n   { name: 'Caroline }\n ]\n});\n")),Object(r.b)("h4",{id:"type-parameters-4"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters-4"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"args")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/api/modules/mock#setargs"}),Object(r.b)("em",{parentName:"a"},"SetArgs")),"<","KeyT\\",">")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L153"}),"packages/mock/src/types.ts:153")),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"set"),"<","KeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("em",{parentName:"p"},"string"),", ",Object(r.b)("inlineCode",{parentName:"p"},"key"),": KeyT, ",Object(r.b)("inlineCode",{parentName:"p"},"fieldName"),": ",Object(r.b)("em",{parentName:"p"},"string"),", ",Object(r.b)("inlineCode",{parentName:"p"},"value?"),": ",Object(r.b)("em",{parentName:"p"},"unknown"),"): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Shorthand for ",Object(r.b)("inlineCode",{parentName:"p"},"set({typeName, key, fieldName, value})"),"."),Object(r.b)("h4",{id:"type-parameters-5"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters-5"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"key")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"KeyT")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fieldName")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"unknown"))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L158"}),"packages/mock/src/types.ts:158")),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"set"),"<","KeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": ",Object(r.b)("em",{parentName:"p"},"string"),", ",Object(r.b)("inlineCode",{parentName:"p"},"key"),": KeyT, ",Object(r.b)("inlineCode",{parentName:"p"},"values"),": { ","[fieldName: string]",": ",Object(r.b)("em",{parentName:"p"},"any"),";  }): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Set the given field values to the type with key."),Object(r.b)("h4",{id:"type-parameters-6"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters-6"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"key")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"KeyT")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"values")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"{ ","[fieldName: string]",": ",Object(r.b)("em",{parentName:"td"},"any"),";  }")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L163"}),"packages/mock/src/types.ts:163")),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"set"),"<","KeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"ref"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/api/modules/mock#ref"}),Object(r.b)("em",{parentName:"a"},"Ref")),"<","KeyT\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"fieldName"),": ",Object(r.b)("em",{parentName:"p"},"string"),", ",Object(r.b)("inlineCode",{parentName:"p"},"value?"),": ",Object(r.b)("em",{parentName:"p"},"unknown"),"): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Shorthand for ",Object(r.b)("inlineCode",{parentName:"p"},"set({ref.$ref.typeName, ref.$ref.key, fieldName, value})"),"."),Object(r.b)("h4",{id:"type-parameters-7"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters-7"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ref")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/api/modules/mock#ref"}),Object(r.b)("em",{parentName:"a"},"Ref")),"<","KeyT\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fieldName")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"unknown"))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L172"}),"packages/mock/src/types.ts:172")),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"set"),"<","KeyT\\",">","(",Object(r.b)("inlineCode",{parentName:"p"},"ref"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/api/modules/mock#ref"}),Object(r.b)("em",{parentName:"a"},"Ref")),"<","KeyT\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"values"),": { ","[fieldName: string]",": ",Object(r.b)("em",{parentName:"p"},"any"),";  }): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Set the given field values to the type with ref."),Object(r.b)("h4",{id:"type-parameters-8"},"Type parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"KeyT")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string")," ","|"," ",Object(r.b)("em",{parentName:"td"},"number")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("em",{parentName:"td"},"string"))))),Object(r.b)("h4",{id:"parameters-8"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"ref")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/api/modules/mock#ref"}),Object(r.b)("em",{parentName:"a"},"Ref")),"<","KeyT\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"values")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"{ ","[fieldName: string]",": ",Object(r.b)("em",{parentName:"td"},"any"),";  }")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Defined in: ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/types.ts#L177"}),"packages/mock/src/types.ts:177")))}O.isMDXComponent=!0},258:function(e,t,a){"use strict";a.d(t,"a",(function(){return j})),a.d(t,"b",(function(){return N}));var b=a(0),n=a.n(b);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,b)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,b,n=function(e,t){if(null==e)return{};var a,b,n={},r=Object.keys(e);for(b=0;b<r.length;b++)a=r[b],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(b=0;b<r.length;b++)a=r[b],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=n.a.createContext({}),O=function(e){var t=n.a.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},j=function(e){var t=O(e.components);return n.a.createElement(m.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,b=e.mdxType,r=e.originalType,c=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),j=O(a),d=b,N=j["".concat(c,".").concat(d)]||j[d]||i[d]||r;return a?n.a.createElement(N,l(l({ref:t},m),{},{components:a})):n.a.createElement(N,l({ref:t},m))}));function N(e,t){var a=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var r=a.length,c=new Array(r);c[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:b,c[1]=l;for(var m=2;m<r;m++)c[m]=a[m];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);
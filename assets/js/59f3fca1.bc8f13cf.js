(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{136:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),c=(a(0),a(258)),b={},o={unversionedId:"api/classes/mock_src.mocklist",id:"api/classes/mock_src.mocklist",isDocsHomePage:!1,title:"mock_src.mocklist",description:"Class: MockList",source:"@site/docs/api/classes/mock_src.mocklist.md",slug:"/api/classes/mock_src.mocklist",permalink:"/docs/api/classes/mock_src.mocklist",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/classes/mock_src.mocklist.md",version:"current",sidebar:"someSidebar",previous:{title:"wrap_src.mapleafvalues",permalink:"/docs/api/classes/wrap_src.mapleafvalues"},next:{title:"loaders_module_src.moduleloader",permalink:"/docs/api/classes/loaders_module_src.moduleloader"}},l=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Table of contents",id:"table-of-contents",children:[{value:"Constructors",id:"constructors",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Constructors",id:"constructors-1",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"mock",id:"mock",children:[]}]}],m={toc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"class-mocklist"},"Class: MockList"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"../modules/mock_src"}),"mock/src"),".MockList"),Object(c.b)("p",null,"This is an object you can return from your mock resolvers which calls the\nprovided ",Object(c.b)("inlineCode",{parentName:"p"},"mockFunction")," once for each list item."),Object(c.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"MockList"))),Object(c.b)("h2",{id:"table-of-contents"},"Table of contents"),Object(c.b)("h3",{id:"constructors"},"Constructors"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/classes/mock_src.mocklist#constructor"}),"constructor"))),Object(c.b)("h3",{id:"methods"},"Methods"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/classes/mock_src.mocklist#mock"}),"mock"))),Object(c.b)("h2",{id:"constructors-1"},"Constructors"),Object(c.b)("h3",{id:"constructor"},"constructor"),Object(c.b)("p",null,"+"," ",Object(c.b)("strong",{parentName:"p"},"new MockList"),"(",Object(c.b)("inlineCode",{parentName:"p"},"length"),": ",Object(c.b)("em",{parentName:"p"},"number")," ","|"," ",Object(c.b)("em",{parentName:"p"},"number"),"[], ",Object(c.b)("inlineCode",{parentName:"p"},"mockFunction?"),": ",Object(c.b)("em",{parentName:"p"},"GraphQLFieldResolver"),"<",Object(c.b)("em",{parentName:"p"},"any"),", ",Object(c.b)("em",{parentName:"p"},"any"),", { ","[argName: string]",": ",Object(c.b)("em",{parentName:"p"},"any"),";  }\\",">","): ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"mock_src.mocklist"}),Object(c.b)("em",{parentName:"a"},"MockList"))),Object(c.b)("h4",{id:"parameters"},"Parameters:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"length")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("em",{parentName:"td"},"number")," ","|"," ",Object(c.b)("em",{parentName:"td"},"number"),"[]"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Either the exact length of items to return or an inclusive range of possible lengths.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"mockFunction?")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("em",{parentName:"td"},"GraphQLFieldResolver"),"<",Object(c.b)("em",{parentName:"td"},"any"),", ",Object(c.b)("em",{parentName:"td"},"any"),", { ","[argName: string]",": ",Object(c.b)("em",{parentName:"td"},"any"),";  }\\",">"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The function to call for each item in the list to resolve it. It can return another MockList or a value.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"mock_src.mocklist"}),Object(c.b)("em",{parentName:"a"},"MockList"))),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L402"}),"packages/mock/src/mocking.ts:402")),Object(c.b)("h2",{id:"methods-1"},"Methods"),Object(c.b)("h3",{id:"mock"},"mock"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"mock"),"(",Object(c.b)("inlineCode",{parentName:"p"},"root"),": ",Object(c.b)("em",{parentName:"p"},"any"),", ",Object(c.b)("inlineCode",{parentName:"p"},"args"),": ",Object(c.b)("em",{parentName:"p"},"Record"),"<",Object(c.b)("em",{parentName:"p"},"string"),", ",Object(c.b)("em",{parentName:"p"},"any"),"\\",">",", ",Object(c.b)("inlineCode",{parentName:"p"},"context"),": ",Object(c.b)("em",{parentName:"p"},"any"),", ",Object(c.b)("inlineCode",{parentName:"p"},"info"),": GraphQLResolveInfo, ",Object(c.b)("inlineCode",{parentName:"p"},"fieldType"),": ",Object(c.b)("em",{parentName:"p"},"GraphQLList"),"<",Object(c.b)("em",{parentName:"p"},"any"),"\\",">",", ",Object(c.b)("inlineCode",{parentName:"p"},"mockTypeFunc"),": ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/modules/mock#imocktypefn"}),Object(c.b)("em",{parentName:"a"},"IMockTypeFn")),"): ",Object(c.b)("em",{parentName:"p"},"any"),"[]"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"internal"))," "),Object(c.b)("h4",{id:"parameters-1"},"Parameters:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"root")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("em",{parentName:"td"},"any"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"args")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("em",{parentName:"td"},"Record"),"<",Object(c.b)("em",{parentName:"td"},"string"),", ",Object(c.b)("em",{parentName:"td"},"any"),"\\",">")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"context")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("em",{parentName:"td"},"any"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"info")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GraphQLResolveInfo")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"fieldType")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("em",{parentName:"td"},"GraphQLList"),"<",Object(c.b)("em",{parentName:"td"},"any"),"\\",">")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"mockTypeFunc")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/modules/mock#imocktypefn"}),Object(c.b)("em",{parentName:"a"},"IMockTypeFn")))))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"any"),"[]"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/mock/src/mocking.ts#L423"}),"packages/mock/src/mocking.ts:423")))}p.isMDXComponent=!0},258:function(e,t,a){"use strict";a.d(t,"a",(function(){return i})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=r.a.createContext({}),p=function(e){var t=r.a.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},i=function(e){var t=p(e.components);return r.a.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,b=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),i=p(a),O=n,j=i["".concat(b,".").concat(O)]||i[O]||s[O]||c;return a?r.a.createElement(j,o(o({ref:t},m),{},{components:a})):r.a.createElement(j,o({ref:t},m))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,b=new Array(c);b[0]=O;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,b[1]=o;for(var m=2;m<c;m++)b[m]=a[m];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);
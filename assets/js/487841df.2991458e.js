(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{157:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return o})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var a=r(3),n=r(8),s=(r(0),r(303)),i={},o={unversionedId:"api/interfaces/utils_src.iaddresolverstoschemaoptions",id:"api/interfaces/utils_src.iaddresolverstoschemaoptions",isDocsHomePage:!1,title:"utils_src.iaddresolverstoschemaoptions",description:"Interface: IAddResolversToSchemaOptions",source:"@site/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions.md",slug:"/api/interfaces/utils_src.iaddresolverstoschemaoptions",permalink:"/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions.md",version:"current",sidebar:"someSidebar",previous:{title:"graphql_tag_pluck_src.graphqltagpluckoptions",permalink:"/docs/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions"},next:{title:"delegate_src.icreateproxyingresolveroptions",permalink:"/docs/api/interfaces/delegate_src.icreateproxyingresolveroptions"}},l=[{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"defaultFieldResolver",id:"defaultfieldresolver",children:[]},{value:"inheritResolversFromInterfaces",id:"inheritresolversfrominterfaces",children:[]},{value:"resolverValidationOptions",id:"resolvervalidationoptions",children:[]},{value:"resolvers",id:"resolvers",children:[]},{value:"schema",id:"schema",children:[]},{value:"updateResolversInPlace",id:"updateresolversinplace",children:[]}]}],c={toc:l};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"interface-iaddresolverstoschemaoptions"},"Interface: IAddResolversToSchemaOptions"),Object(s.b)("p",null,Object(s.b)("a",{parentName:"p",href:"../modules/utils_src"},"utils/src"),".IAddResolversToSchemaOptions"),Object(s.b)("p",null,"Configuration object for adding resolvers to a schema"),Object(s.b)("h2",{id:"table-of-contents"},"Table of contents"),Object(s.b)("h3",{id:"properties"},"Properties"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions#defaultfieldresolver"},"defaultFieldResolver")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions#inheritresolversfrominterfaces"},"inheritResolversFromInterfaces")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions#resolvervalidationoptions"},"resolverValidationOptions")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions#resolvers"},"resolvers")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions#schema"},"schema")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",{parentName:"li",href:"/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions#updateresolversinplace"},"updateResolversInPlace"))),Object(s.b)("h2",{id:"properties-1"},"Properties"),Object(s.b)("h3",{id:"defaultfieldresolver"},"defaultFieldResolver"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"defaultFieldResolver"),": ",Object(s.b)("a",{parentName:"p",href:"/docs/api/modules/utils#ifieldresolver"},Object(s.b)("em",{parentName:"a"},"IFieldResolver")),"<","any, any, Record","<","string, any\\",">",", any\\",">"),Object(s.b)("p",null,"Override the default field resolver provided by ",Object(s.b)("inlineCode",{parentName:"p"},"graphql-js")),Object(s.b)("p",null,"Defined in: ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L139"},"packages/utils/src/Interfaces.ts:139")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"inheritresolversfrominterfaces"},"inheritResolversFromInterfaces"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"inheritResolversFromInterfaces"),": ",Object(s.b)("em",{parentName:"p"},"boolean")),Object(s.b)("p",null,"GraphQL object types that implement interfaces will inherit any missing\nresolvers from their interface types defined in the ",Object(s.b)("inlineCode",{parentName:"p"},"resolvers")," object"),Object(s.b)("p",null,"Defined in: ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L148"},"packages/utils/src/Interfaces.ts:148")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"resolvervalidationoptions"},"resolverValidationOptions"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"resolverValidationOptions"),": ",Object(s.b)("a",{parentName:"p",href:"utils_src.iresolvervalidationoptions"},Object(s.b)("em",{parentName:"a"},"IResolverValidationOptions"))),Object(s.b)("p",null,"Additional options for validating the provided resolvers"),Object(s.b)("p",null,"Defined in: ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L143"},"packages/utils/src/Interfaces.ts:143")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"resolvers"},"resolvers"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("strong",{parentName:"p"},"resolvers"),": ",Object(s.b)("a",{parentName:"p",href:"/docs/api/modules/utils#iresolvers"},Object(s.b)("em",{parentName:"a"},"IResolvers")),"<","any, any, Record","<","string, any\\",">",", any\\",">"),Object(s.b)("p",null,"Object describing the field resolvers to add to the provided schema"),Object(s.b)("p",null,"Defined in: ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L135"},"packages/utils/src/Interfaces.ts:135")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"schema"},"schema"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("strong",{parentName:"p"},"schema"),": ",Object(s.b)("em",{parentName:"p"},"GraphQLSchema")),Object(s.b)("p",null,"The schema to which to add resolvers"),Object(s.b)("p",null,"Defined in: ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L131"},"packages/utils/src/Interfaces.ts:131")),Object(s.b)("hr",null),Object(s.b)("h3",{id:"updateresolversinplace"},"updateResolversInPlace"),Object(s.b)("p",null,"\u2022 ",Object(s.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(s.b)("strong",{parentName:"p"},"updateResolversInPlace"),": ",Object(s.b)("em",{parentName:"p"},"boolean")),Object(s.b)("p",null,"Set to ",Object(s.b)("inlineCode",{parentName:"p"},"true")," to modify the existing schema instead of creating a new one"),Object(s.b)("p",null,"Defined in: ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L152"},"packages/utils/src/Interfaces.ts:152")))}p.isMDXComponent=!0},303:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var a=r(0),n=r.n(a);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),p=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},b=function(e){var t=p(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(r),u=a,m=b["".concat(i,".").concat(u)]||b[u]||d[u]||s;return r?n.a.createElement(m,o(o({ref:t},c),{},{components:r})):n.a.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=r[c];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);
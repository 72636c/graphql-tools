(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{128:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return b}));var r=a(3),s=a(8),n=(a(0),a(303)),i={},c={unversionedId:"api/interfaces/stitch_src.istitchschemasoptions",id:"api/interfaces/stitch_src.istitchschemasoptions",isDocsHomePage:!1,title:"stitch_src.istitchschemasoptions",description:"Interface: IStitchSchemasOptions&lt;TContext\\&gt;",source:"@site/docs/api/interfaces/stitch_src.istitchschemasoptions.md",slug:"/api/interfaces/stitch_src.istitchschemasoptions",permalink:"/docs/api/interfaces/stitch_src.istitchschemasoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/stitch_src.istitchschemasoptions.md",version:"current",sidebar:"someSidebar",previous:{title:"utils_src.iresolvervalidationoptions",permalink:"/docs/api/interfaces/utils_src.iresolvervalidationoptions"},next:{title:"loaders_json_file_src.jsonfileloaderoptions",permalink:"/docs/api/interfaces/loaders_json_file_src.jsonfileloaderoptions"}},p=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"allowUndefinedInResolve",id:"allowundefinedinresolve",children:[]},{value:"directiveResolvers",id:"directiveresolvers",children:[]},{value:"inheritResolversFromInterfaces",id:"inheritresolversfrominterfaces",children:[]},{value:"logger",id:"logger",children:[]},{value:"mergeDirectives",id:"mergedirectives",children:[]},{value:"mergeTypes",id:"mergetypes",children:[]},{value:"noExtensionExtraction",id:"noextensionextraction",children:[]},{value:"onTypeConflict",id:"ontypeconflict",children:[]},{value:"parseOptions",id:"parseoptions",children:[]},{value:"pruningOptions",id:"pruningoptions",children:[]},{value:"resolverValidationOptions",id:"resolvervalidationoptions",children:[]},{value:"resolvers",id:"resolvers",children:[]},{value:"schemaDirectives",id:"schemadirectives",children:[]},{value:"schemaTransforms",id:"schematransforms",children:[]},{value:"subschemaConfigTransforms",id:"subschemaconfigtransforms",children:[]},{value:"subschemas",id:"subschemas",children:[]},{value:"typeDefs",id:"typedefs",children:[]},{value:"typeMergingOptions",id:"typemergingoptions",children:[]},{value:"types",id:"types",children:[]},{value:"updateResolversInPlace",id:"updateresolversinplace",children:[]}]}],o={toc:p};function b(e){var t=e.components,a=Object(s.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"interface-istitchschemasoptionstcontext"},"Interface: IStitchSchemasOptions","<","TContext\\",">"),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"../modules/stitch_src"},"stitch/src"),".IStitchSchemasOptions"),Object(n.b)("h2",{id:"type-parameters"},"Type parameters"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:"left"},"Name"),Object(n.b)("th",{parentName:"tr",align:"left"},"Default"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("inlineCode",{parentName:"td"},"TContext")),Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("em",{parentName:"td"},"Record"),"<","string, any\\",">")))),Object(n.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},Object(n.b)("em",{parentName:"p"},"Omit"),"<",Object(n.b)("a",{parentName:"p",href:"schema_src.iexecutableschemadefinition"},Object(n.b)("em",{parentName:"a"},"IExecutableSchemaDefinition")),"<","TContext\\",">",", ",Object(n.b)("inlineCode",{parentName:"p"},'"typeDefs"'),"\\",">"),Object(n.b)("p",{parentName:"li"},"\u21b3 ",Object(n.b)("strong",{parentName:"p"},"IStitchSchemasOptions")))),Object(n.b)("h2",{id:"table-of-contents"},"Table of contents"),Object(n.b)("h3",{id:"properties"},"Properties"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#allowundefinedinresolve"},"allowUndefinedInResolve")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#directiveresolvers"},"directiveResolvers")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#inheritresolversfrominterfaces"},"inheritResolversFromInterfaces")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#logger"},"logger")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#mergedirectives"},"mergeDirectives")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#mergetypes"},"mergeTypes")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#noextensionextraction"},"noExtensionExtraction")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#ontypeconflict"},"onTypeConflict")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#parseoptions"},"parseOptions")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#pruningoptions"},"pruningOptions")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#resolvervalidationoptions"},"resolverValidationOptions")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#resolvers"},"resolvers")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#schemadirectives"},"schemaDirectives")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#schematransforms"},"schemaTransforms")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#subschemaconfigtransforms"},"subschemaConfigTransforms")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#subschemas"},"subschemas")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#typedefs"},"typeDefs")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#typemergingoptions"},"typeMergingOptions")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#types"},"types")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/docs/api/interfaces/stitch_src.istitchschemasoptions#updateresolversinplace"},"updateResolversInPlace"))),Object(n.b)("h2",{id:"properties-1"},"Properties"),Object(n.b)("h3",{id:"allowundefinedinresolve"},"allowUndefinedInResolve"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"allowUndefinedInResolve"),": ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("p",null,"Set to ",Object(n.b)("inlineCode",{parentName:"p"},"false")," to have resolvers throw an if they return undefined, which\ncan help make debugging easier"),Object(n.b)("p",null,"Inherited from: Omit.allowUndefinedInResolve"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L38"},"packages/schema/src/types.ts:38")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"directiveresolvers"},"directiveResolvers"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"directiveResolvers"),": ",Object(n.b)("a",{parentName:"p",href:"utils_src.idirectiveresolvers"},Object(n.b)("em",{parentName:"a"},"IDirectiveResolvers")),"<","any, TContext\\",">"),Object(n.b)("p",null,"Map of directive resolvers"),Object(n.b)("p",null,"Inherited from: Omit.directiveResolvers"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L46"},"packages/schema/src/types.ts:46")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"inheritresolversfrominterfaces"},"inheritResolversFromInterfaces"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"inheritResolversFromInterfaces"),": ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("p",null,"GraphQL object types that implement interfaces will inherit any missing\nresolvers from their interface types defined in the ",Object(n.b)("inlineCode",{parentName:"p"},"resolvers")," object"),Object(n.b)("p",null,"Inherited from: Omit.inheritResolversFromInterfaces"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L65"},"packages/schema/src/types.ts:65")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"logger"},"logger"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"logger"),": ",Object(n.b)("a",{parentName:"p",href:"schema_src.ilogger"},Object(n.b)("em",{parentName:"a"},"ILogger"))),Object(n.b)("p",null,"Logger instance used to print errors to the server console that are\nusually swallowed by GraphQL."),Object(n.b)("p",null,"Inherited from: Omit.logger"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L33"},"packages/schema/src/types.ts:33")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"mergedirectives"},"mergeDirectives"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"mergeDirectives"),": ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/types.ts#L61"},"packages/stitch/src/types.ts:61")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"mergetypes"},"mergeTypes"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"mergeTypes"),": ",Object(n.b)("em",{parentName:"p"},"boolean")," ","|"," ",Object(n.b)("em",{parentName:"p"},"string"),"[] ","|"," ",Object(n.b)("a",{parentName:"p",href:"/docs/api/modules/stitch#mergetypefilter"},Object(n.b)("em",{parentName:"a"},"MergeTypeFilter")),"<","TContext\\",">"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/types.ts#L62"},"packages/stitch/src/types.ts:62")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"noextensionextraction"},"noExtensionExtraction"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"noExtensionExtraction"),": ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("p",null,"Do not extract and apply extensions separately and leave it to ",Object(n.b)("inlineCode",{parentName:"p"},"buildASTSchema")),Object(n.b)("p",null,"Inherited from: Omit.noExtensionExtraction"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L77"},"packages/schema/src/types.ts:77")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"ontypeconflict"},"onTypeConflict"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"onTypeConflict"),": ",Object(n.b)("a",{parentName:"p",href:"/docs/api/modules/stitch#ontypeconflict"},Object(n.b)("em",{parentName:"a"},"OnTypeConflict")),"<","Record","<","string, any\\",">","\\",">"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/types.ts#L60"},"packages/stitch/src/types.ts:60")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"parseoptions"},"parseOptions"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"parseOptions"),": ",Object(n.b)("a",{parentName:"p",href:"utils_src.graphqlparseoptions"},Object(n.b)("em",{parentName:"a"},"GraphQLParseOptions"))),Object(n.b)("p",null,"Additional options for parsing the type definitions if they are provided\nas a string"),Object(n.b)("p",null,"Inherited from: Omit.parseOptions"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L60"},"packages/schema/src/types.ts:60")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"pruningoptions"},"pruningOptions"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"pruningOptions"),": ",Object(n.b)("a",{parentName:"p",href:"utils_src.pruneschemaoptions"},Object(n.b)("em",{parentName:"a"},"PruneSchemaOptions"))),Object(n.b)("p",null,"Additional options for removing unused types from the schema"),Object(n.b)("p",null,"Inherited from: Omit.pruningOptions"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L69"},"packages/schema/src/types.ts:69")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"resolvervalidationoptions"},"resolverValidationOptions"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"resolverValidationOptions"),": ",Object(n.b)("a",{parentName:"p",href:"utils_src.iresolvervalidationoptions"},Object(n.b)("em",{parentName:"a"},"IResolverValidationOptions"))),Object(n.b)("p",null,"Additional options for validating the provided resolvers"),Object(n.b)("p",null,"Inherited from: Omit.resolverValidationOptions"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L42"},"packages/schema/src/types.ts:42")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"resolvers"},"resolvers"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"resolvers"),": ",Object(n.b)("a",{parentName:"p",href:"/docs/api/modules/utils#iresolvers"},Object(n.b)("em",{parentName:"a"},"IResolvers")),"<","any, TContext, Record","<","string, any\\",">",", any\\",">"," ","|"," ",Object(n.b)("a",{parentName:"p",href:"/docs/api/modules/utils#iresolvers"},Object(n.b)("em",{parentName:"a"},"IResolvers")),"<","any, TContext, Record","<","string, any\\",">",", any\\",">","[]"),Object(n.b)("p",null,"Object describing the field resolvers for the provided type definitions"),Object(n.b)("p",null,"Inherited from: Omit.resolvers"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L28"},"packages/schema/src/types.ts:28")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"schemadirectives"},"schemaDirectives"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"schemaDirectives"),": ",Object(n.b)("em",{parentName:"p"},"Record"),"<","string, ",Object(n.b)("em",{parentName:"p"},"typeof")," ",Object(n.b)("a",{parentName:"p",href:"/docs/api/classes/utils_src.schemadirectivevisitor"},Object(n.b)("em",{parentName:"a"},"SchemaDirectiveVisitor")),"\\",">"),Object(n.b)("p",null,"A map of schema directives used with the legacy class-based implementation\nof schema directives"),Object(n.b)("p",null,"Inherited from: Omit.schemaDirectives"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L51"},"packages/schema/src/types.ts:51")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"schematransforms"},"schemaTransforms"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"schemaTransforms"),": ",Object(n.b)("a",{parentName:"p",href:"/docs/api/modules/schema#executableschematransformation"},Object(n.b)("em",{parentName:"a"},"ExecutableSchemaTransformation")),"[]"),Object(n.b)("p",null,"An array of schema transformation functions"),Object(n.b)("p",null,"Inherited from: Omit.schemaTransforms"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L55"},"packages/schema/src/types.ts:55")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"subschemaconfigtransforms"},"subschemaConfigTransforms"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"subschemaConfigTransforms"),": ",Object(n.b)("a",{parentName:"p",href:"/docs/api/modules/stitch#subschemaconfigtransform"},Object(n.b)("em",{parentName:"a"},"SubschemaConfigTransform")),"<","TContext\\",">","[]"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/types.ts#L64"},"packages/stitch/src/types.ts:64")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"subschemas"},"subschemas"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"subschemas"),": (",Object(n.b)("em",{parentName:"p"},"GraphQLSchema")," ","|"," ",Object(n.b)("a",{parentName:"p",href:"delegate_src.subschemaconfig"},Object(n.b)("em",{parentName:"a"},"SubschemaConfig")),"<","any, any, any, TContext\\",">"," ","|"," ",Object(n.b)("a",{parentName:"p",href:"delegate_src.subschemaconfig"},Object(n.b)("em",{parentName:"a"},"SubschemaConfig")),"<","any, any, any, TContext\\",">","[])[]"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/types.ts#L55"},"packages/stitch/src/types.ts:55")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"typedefs"},"typeDefs"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"typeDefs"),": ",Object(n.b)("a",{parentName:"p",href:"/docs/api/modules/utils#itypedefinitions"},Object(n.b)("em",{parentName:"a"},"ITypeDefinitions"))),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/types.ts#L58"},"packages/stitch/src/types.ts:58")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"typemergingoptions"},"typeMergingOptions"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"typeMergingOptions"),": ",Object(n.b)("a",{parentName:"p",href:"stitch_src.typemergingoptions"},Object(n.b)("em",{parentName:"a"},"TypeMergingOptions")),"<","TContext\\",">"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/types.ts#L63"},"packages/stitch/src/types.ts:63")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"types"},"types"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"types"),": GraphQLNamedType[]"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/stitch/src/types.ts#L59"},"packages/stitch/src/types.ts:59")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"updateresolversinplace"},"updateResolversInPlace"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(n.b)("strong",{parentName:"p"},"updateResolversInPlace"),": ",Object(n.b)("em",{parentName:"p"},"boolean")),Object(n.b)("p",null,"Do not create a schema again and use the one from ",Object(n.b)("inlineCode",{parentName:"p"},"buildASTSchema")),Object(n.b)("p",null,"Inherited from: Omit.updateResolversInPlace"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/schema/src/types.ts#L73"},"packages/schema/src/types.ts:73")))}b.isMDXComponent=!0},303:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return O}));var r=a(0),s=a.n(r);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var o=s.a.createContext({}),b=function(e){var t=s.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},l=function(e){var t=b(e.components);return s.a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},h=s.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),l=b(a),h=r,O=l["".concat(i,".").concat(h)]||l[h]||m[h]||n;return a?s.a.createElement(O,c(c({ref:t},o),{},{components:a})):s.a.createElement(O,c({ref:t},o))}));function O(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=h;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var o=2;o<n;o++)i[o]=a[o];return s.a.createElement.apply(null,i)}return s.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"}}]);
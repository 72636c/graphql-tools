(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{157:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(3),i=n(7),p=(n(0),n(207)),a={id:"_utils_src_index_.pruneschemaoptions",title:"PruneSchemaOptions",sidebar_label:"PruneSchemaOptions"},o={unversionedId:"api/interfaces/_utils_src_index_.pruneschemaoptions",id:"api/interfaces/_utils_src_index_.pruneschemaoptions",isDocsHomePage:!1,title:"PruneSchemaOptions",description:"Options for removing unused types from the schema",source:"@site/docs/api/interfaces/_utils_src_index_.pruneschemaoptions.md",slug:"/api/interfaces/_utils_src_index_.pruneschemaoptions",permalink:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/_utils_src_index_.pruneschemaoptions.md",version:"current",sidebar_label:"PruneSchemaOptions",sidebar:"someSidebar",previous:{title:"PrismaLoaderOptions",permalink:"/docs/api/interfaces/_loaders_prisma_src_index_.prismaloaderoptions"},next:{title:"Request",permalink:"/docs/api/interfaces/_utils_src_index_.request"}},s=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"<code>Optional</code> skipEmptyCompositeTypePruning",id:"optional-skipemptycompositetypepruning",children:[]},{value:"<code>Optional</code> skipEmptyUnionPruning",id:"optional-skipemptyunionpruning",children:[]},{value:"<code>Optional</code> skipUnimplementedInterfacesPruning",id:"optional-skipunimplementedinterfacespruning",children:[]},{value:"<code>Optional</code> skipUnusedTypesPruning",id:"optional-skipunusedtypespruning",children:[]}]}],c={rightToc:s};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(p.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(p.b)("p",null,"Options for removing unused types from the schema"),Object(p.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("strong",{parentName:"li"},"PruneSchemaOptions"))),Object(p.b)("h2",{id:"index"},"Index"),Object(p.b)("h3",{id:"properties"},"Properties"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions#optional-skipemptycompositetypepruning"}),"skipEmptyCompositeTypePruning")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions#optional-skipemptyunionpruning"}),"skipEmptyUnionPruning")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions#optional-skipunimplementedinterfacespruning"}),"skipUnimplementedInterfacesPruning")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_utils_src_index_.pruneschemaoptions#optional-skipunusedtypespruning"}),"skipUnusedTypesPruning"))),Object(p.b)("h2",{id:"properties-1"},"Properties"),Object(p.b)("h3",{id:"optional-skipemptycompositetypepruning"},Object(p.b)("inlineCode",{parentName:"h3"},"Optional")," skipEmptyCompositeTypePruning"),Object(p.b)("p",null,"\u2022 ",Object(p.b)("strong",{parentName:"p"},"skipEmptyCompositeTypePruning"),"? : ",Object(p.b)("em",{parentName:"p"},"boolean")),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"Defined in ",Object(p.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/types.ts#L24"}),"packages/utils/src/types.ts:24"))),Object(p.b)("p",null,"Set to ",Object(p.b)("inlineCode",{parentName:"p"},"true")," to skip pruning object types or interfaces with no no fields"),Object(p.b)("hr",null),Object(p.b)("h3",{id:"optional-skipemptyunionpruning"},Object(p.b)("inlineCode",{parentName:"h3"},"Optional")," skipEmptyUnionPruning"),Object(p.b)("p",null,"\u2022 ",Object(p.b)("strong",{parentName:"p"},"skipEmptyUnionPruning"),"? : ",Object(p.b)("em",{parentName:"p"},"boolean")),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"Defined in ",Object(p.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/types.ts#L33"}),"packages/utils/src/types.ts:33"))),Object(p.b)("p",null,"Set to ",Object(p.b)("inlineCode",{parentName:"p"},"true")," to skip pruning empty unions"),Object(p.b)("hr",null),Object(p.b)("h3",{id:"optional-skipunimplementedinterfacespruning"},Object(p.b)("inlineCode",{parentName:"h3"},"Optional")," skipUnimplementedInterfacesPruning"),Object(p.b)("p",null,"\u2022 ",Object(p.b)("strong",{parentName:"p"},"skipUnimplementedInterfacesPruning"),"? : ",Object(p.b)("em",{parentName:"p"},"boolean")),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"Defined in ",Object(p.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/types.ts#L29"}),"packages/utils/src/types.ts:29"))),Object(p.b)("p",null,"Set to ",Object(p.b)("inlineCode",{parentName:"p"},"true")," to skip pruning interfaces that are not implemented by any\nother types"),Object(p.b)("hr",null),Object(p.b)("h3",{id:"optional-skipunusedtypespruning"},Object(p.b)("inlineCode",{parentName:"h3"},"Optional")," skipUnusedTypesPruning"),Object(p.b)("p",null,"\u2022 ",Object(p.b)("strong",{parentName:"p"},"skipUnusedTypesPruning"),"? : ",Object(p.b)("em",{parentName:"p"},"boolean")),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"Defined in ",Object(p.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/types.ts#L37"}),"packages/utils/src/types.ts:37"))),Object(p.b)("p",null,"Set to ",Object(p.b)("inlineCode",{parentName:"p"},"true")," to skip pruning unused types"))}l.isMDXComponent=!0},207:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),i=n.n(r);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),l=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,d=u["".concat(a,".").concat(m)]||u[m]||b[m]||p;return n?i.a.createElement(d,o(o({ref:t},c),{},{components:n})):i.a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,a=new Array(p);a[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var c=2;c<p;c++)a[c]=n[c];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);
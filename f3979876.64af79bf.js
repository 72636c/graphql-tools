(window.webpackJsonp=window.webpackJsonp||[]).push([[454],{526:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return n})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return m})),a.d(t,"default",(function(){return p}));var r=a(3),s=a(7),c=(a(0),a(552)),n={},i={unversionedId:"api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig",id:"api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig",isDocsHomePage:!1,title:"_packages_merge_src_merge_schemas_.mergeschemasconfig",description:"@graphql-tools/utils",source:"@site/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig.md",slug:"/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig",permalink:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig.md",version:"current",sidebar:"someSidebar",previous:{title:"_packages_merge_src_merge_resolvers_.mergeresolversoptions",permalink:"/docs/api/interfaces/_packages_merge_src_merge_resolvers_.mergeresolversoptions"},next:{title:"_packages_stitch_src_types_.mergetypecandidate",permalink:"/docs/api/interfaces/_packages_stitch_src_types_.mergetypecandidate"}},m=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"assumeValid",id:"assumevalid",children:[]},{value:"assumeValidSDL",id:"assumevalidsdl",children:[]},{value:"commentDescriptions",id:"commentdescriptions",children:[]},{value:"convertExtensions",id:"convertextensions",children:[]},{value:"exclusions",id:"exclusions",children:[]},{value:"forceSchemaDefinition",id:"forceschemadefinition",children:[]},{value:"logger",id:"logger",children:[]},{value:"resolverValidationOptions",id:"resolvervalidationoptions",children:[]},{value:"resolvers",id:"resolvers",children:[]},{value:"reverseDirectives",id:"reversedirectives",children:[]},{value:"schemaDirectives",id:"schemadirectives",children:[]},{value:"schemas",id:"schemas",children:[]},{value:"sort",id:"sort",children:[]},{value:"throwOnConflict",id:"throwonconflict",children:[]},{value:"typeDefs",id:"typedefs",children:[]},{value:"useSchemaDefinition",id:"useschemadefinition",children:[]}]}],b={toc:m};function p(e){var t=e.components,a=Object(s.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(r.a)({parentName:"strong"},{href:"../README"}),"@graphql-tools/utils"))),Object(c.b)("h1",{id:"interface-mergeschemasconfigresolvers"},"Interface: MergeSchemasConfig","<","Resolvers\\",">"),Object(c.b)("p",null,"Configuration object for schema merging"),Object(c.b)("h2",{id:"type-parameters"},"Type parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Default"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"Resolvers")),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(r.a)({parentName:"td"},{href:"/docs/api/modules/_packages_utils_src_interfaces_#iresolvers"}),"IResolvers")),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"IResolvers")))),Object(c.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"BuildSchemaOptions"),Object(c.b)("p",{parentName:"li"},"\u21b3 ",Object(c.b)("strong",{parentName:"p"},"MergeSchemasConfig")))),Object(c.b)("h2",{id:"index"},"Index"),Object(c.b)("h3",{id:"properties"},"Properties"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#assumevalid"}),"assumeValid")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#assumevalidsdl"}),"assumeValidSDL")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#commentdescriptions"}),"commentDescriptions")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#convertextensions"}),"convertExtensions")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#exclusions"}),"exclusions")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#forceschemadefinition"}),"forceSchemaDefinition")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#logger"}),"logger")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#resolvervalidationoptions"}),"resolverValidationOptions")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#resolvers"}),"resolvers")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#reversedirectives"}),"reverseDirectives")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#schemadirectives"}),"schemaDirectives")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#schemas"}),"schemas")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#sort"}),"sort")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#throwonconflict"}),"throwOnConflict")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#typedefs"}),"typeDefs")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#useschemadefinition"}),"useSchemaDefinition"))),Object(c.b)("h2",{id:"properties-1"},"Properties"),Object(c.b)("h3",{id:"assumevalid"},"assumeValid"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"assumeValid"),": boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_merge_schemas_.mergeschemasconfig"}),"MergeSchemasConfig"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#assumevalid"}),"assumeValid"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in node_modules/graphql/type/schema.d.ts:122")),Object(c.b)("p",null,"When building a schema from a GraphQL service's introspection result, it\nmight be safe to assume the schema is valid. Set to true to assume the\nproduced schema is valid."),Object(c.b)("p",null,"Default: false"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"assumevalidsdl"},"assumeValidSDL"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"assumeValidSDL"),": boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_merge_schemas_.mergeschemasconfig"}),"MergeSchemasConfig"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_merge_schemas_.mergeschemasconfig#assumevalidsdl"}),"assumeValidSDL"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in node_modules/graphql/utilities/buildASTSchema.d.ts:22")),Object(c.b)("p",null,"Set to true to assume the SDL is valid."),Object(c.b)("p",null,"Default: false"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"commentdescriptions"},"commentDescriptions"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"commentDescriptions"),": boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_typedefs_mergers_merge_typedefs_.config#commentdescriptions"}),"commentDescriptions"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Overrides void")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L38"}),"packages/merge/src/typedefs-mergers/merge-typedefs.ts:38"))),Object(c.b)("p",null,"Descriptions are defined as preceding string literals, however an older\nexperimental version of the SDL supported preceding comments as\ndescriptions. Set to true to enable this deprecated behavior.\nThis option is provided to ease adoption and will be removed in v16."),Object(c.b)("p",null,"Default: false"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"convertextensions"},"convertExtensions"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"convertExtensions"),": boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_typedefs_mergers_merge_typedefs_.config#convertextensions"}),"convertExtensions"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L59"}),"packages/merge/src/typedefs-mergers/merge-typedefs.ts:59"))),Object(c.b)("hr",null),Object(c.b)("h3",{id:"exclusions"},"exclusions"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"exclusions"),": string[]"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_typedefs_mergers_merge_typedefs_.config#exclusions"}),"exclusions"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L57"}),"packages/merge/src/typedefs-mergers/merge-typedefs.ts:57"))),Object(c.b)("hr",null),Object(c.b)("h3",{id:"forceschemadefinition"},"forceSchemaDefinition"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"forceSchemaDefinition"),": boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_typedefs_mergers_merge_typedefs_.config#forceschemadefinition"}),"forceSchemaDefinition"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L23"}),"packages/merge/src/typedefs-mergers/merge-typedefs.ts:23"))),Object(c.b)("p",null,"Creates schema definition, even when no types are available\nProduces: ",Object(c.b)("inlineCode",{parentName:"p"},"schema { query: Query }")),Object(c.b)("p",null,"Default: false"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"logger"},"logger"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"logger"),": ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"_packages_schema_src_types_.ilogger"}),"ILogger")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L41"}),"packages/merge/src/merge-schemas.ts:41"))),Object(c.b)("p",null,"Custom logger instance"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"resolvervalidationoptions"},"resolverValidationOptions"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"resolverValidationOptions"),": ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"_packages_utils_src_interfaces_.iresolvervalidationoptions"}),"IResolverValidationOptions")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L37"}),"packages/merge/src/merge-schemas.ts:37"))),Object(c.b)("p",null,"Options to validate the resolvers being merged, if provided"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"resolvers"},"resolvers"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"resolvers"),": Resolvers ","|"," Resolvers[]"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L29"}),"packages/merge/src/merge-schemas.ts:29"))),Object(c.b)("p",null,"Additional resolvers to also merge"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"reversedirectives"},"reverseDirectives"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"reverseDirectives"),": boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_typedefs_mergers_merge_typedefs_.config#reversedirectives"}),"reverseDirectives"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L56"}),"packages/merge/src/typedefs-mergers/merge-typedefs.ts:56"))),Object(c.b)("p",null,"Puts the next directive first."),Object(c.b)("p",null,"Default: false"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"example:")),"\nGiven:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"})," type User { a: String @foo }\n type User { a: String @bar }\n")),Object(c.b)("p",null,"Results:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{})," type User { a: @bar @foo }\n")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"schemadirectives"},"schemaDirectives"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"schemaDirectives"),": { ","[directiveName:string]",": ",Object(c.b)("em",{parentName:"p"},"typeof")," SchemaDirectiveVisitor;  }"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L33"}),"packages/merge/src/merge-schemas.ts:33"))),Object(c.b)("p",null,"Schema directives to apply to the type definitions being merged, if provided"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"schemas"},"schemas"),Object(c.b)("p",null,"\u2022  ",Object(c.b)("strong",{parentName:"p"},"schemas"),": GraphQLSchema[]"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L21"}),"packages/merge/src/merge-schemas.ts:21"))),Object(c.b)("p",null,"The schemas to be merged"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"sort"},"sort"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"sort"),": boolean ","|"," ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/modules/_packages_merge_src_typedefs_mergers_merge_typedefs_#comparefn"}),"CompareFn"),"<","string\\",">"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_typedefs_mergers_merge_typedefs_.config#sort"}),"sort"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L58"}),"packages/merge/src/typedefs-mergers/merge-typedefs.ts:58"))),Object(c.b)("hr",null),Object(c.b)("h3",{id:"throwonconflict"},"throwOnConflict"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"throwOnConflict"),": boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_typedefs_mergers_merge_typedefs_.config#throwonconflict"}),"throwOnConflict"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L29"}),"packages/merge/src/typedefs-mergers/merge-typedefs.ts:29"))),Object(c.b)("p",null,"Throws an error on a merge conflict"),Object(c.b)("p",null,"Default: false"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"typedefs"},"typeDefs"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"typeDefs"),": (DocumentNode ","|"," string)[] ","|"," DocumentNode ","|"," string"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L25"}),"packages/merge/src/merge-schemas.ts:25"))),Object(c.b)("p",null,"Additional type definitions to also merge"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"useschemadefinition"},"useSchemaDefinition"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"useSchemaDefinition"),": boolean"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"_packages_merge_src_typedefs_mergers_merge_typedefs_.config"}),"Config"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_packages_merge_src_typedefs_mergers_merge_typedefs_.config#useschemadefinition"}),"useSchemaDefinition"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L16"}),"packages/merge/src/typedefs-mergers/merge-typedefs.ts:16"))),Object(c.b)("p",null,"Produces ",Object(c.b)("inlineCode",{parentName:"p"},"schema { query: ..., mutation: ..., subscription: ... }")),Object(c.b)("p",null,"Default: true"))}p.isMDXComponent=!0},552:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return d}));var r=a(0),s=a.n(r);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var b=s.a.createContext({}),p=function(e){var t=s.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=p(e.components);return s.a.createElement(b.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},g=s.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,n=e.parentName,b=m(e,["components","mdxType","originalType","parentName"]),o=p(a),g=r,d=o["".concat(n,".").concat(g)]||o[g]||l[g]||c;return a?s.a.createElement(d,i(i({ref:t},b),{},{components:a})):s.a.createElement(d,i({ref:t},b))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,n=new Array(c);n[0]=g;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:r,n[1]=i;for(var b=2;b<c;b++)n[b]=a[b];return s.a.createElement.apply(null,n)}return s.a.createElement.apply(null,a)}g.displayName="MDXCreateElement"}}]);
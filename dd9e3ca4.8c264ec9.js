(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{191:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),i=(a(0),a(207)),l={id:"_loaders_github_src_index_.githubloaderoptions",title:"GithubLoaderOptions",sidebar_label:"GithubLoaderOptions"},o={unversionedId:"api/interfaces/_loaders_github_src_index_.githubloaderoptions",id:"api/interfaces/_loaders_github_src_index_.githubloaderoptions",isDocsHomePage:!1,title:"GithubLoaderOptions",description:"Additional options for loading from GitHub",source:"@site/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions.md",slug:"/api/interfaces/_loaders_github_src_index_.githubloaderoptions",permalink:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions.md",version:"current",sidebar_label:"GithubLoaderOptions",sidebar:"someSidebar",previous:{title:"ExecutionResult",permalink:"/docs/api/interfaces/_utils_src_index_.executionresult"},next:{title:"GraphQLExecutionContext",permalink:"/docs/api/interfaces/_utils_src_index_.graphqlexecutioncontext"}},c=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"<code>Optional</code> allowLegacySDLEmptyFields",id:"optional-allowlegacysdlemptyfields",children:[]},{value:"<code>Optional</code> allowLegacySDLImplementsInterfaces",id:"optional-allowlegacysdlimplementsinterfaces",children:[]},{value:"<code>Optional</code> assumeValid",id:"optional-assumevalid",children:[]},{value:"<code>Optional</code> assumeValidSDL",id:"optional-assumevalidsdl",children:[]},{value:"<code>Optional</code> commentDescriptions",id:"optional-commentdescriptions",children:[]},{value:"<code>Optional</code> cwd",id:"optional-cwd",children:[]},{value:"<code>Optional</code> experimentalFragmentVariables",id:"optional-experimentalfragmentvariables",children:[]},{value:"<code>Optional</code> noLocation",id:"optional-nolocation",children:[]},{value:"<code>Optional</code> pluckConfig",id:"optional-pluckconfig",children:[]},{value:"token",id:"token",children:[]}]}],p={rightToc:c};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Additional options for loading from GitHub"),Object(i.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"_utils_src_index_.graphqlparseoptions"}),"GraphQLParseOptions")," & GraphQLSchemaValidationOptions & BuildSchemaOptions & object"),Object(i.b)("p",{parentName:"li"},"\u21b3 ",Object(i.b)("strong",{parentName:"p"},"GithubLoaderOptions")))),Object(i.b)("h2",{id:"index"},"Index"),Object(i.b)("h3",{id:"properties"},"Properties"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-allowlegacysdlemptyfields"}),"allowLegacySDLEmptyFields")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-allowlegacysdlimplementsinterfaces"}),"allowLegacySDLImplementsInterfaces")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-assumevalid"}),"assumeValid")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-assumevalidsdl"}),"assumeValidSDL")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-commentdescriptions"}),"commentDescriptions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-cwd"}),"cwd")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-experimentalfragmentvariables"}),"experimentalFragmentVariables")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-nolocation"}),"noLocation")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#optional-pluckconfig"}),"pluckConfig")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_github_src_index_.githubloaderoptions#token"}),"token"))),Object(i.b)("h2",{id:"properties-1"},"Properties"),Object(i.b)("h3",{id:"optional-allowlegacysdlemptyfields"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," allowLegacySDLEmptyFields"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"allowLegacySDLEmptyFields"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Inherited from ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-allowlegacysdlemptyfields"}),"allowLegacySDLEmptyFields"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L78"}),"packages/utils/src/Interfaces.ts:78"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-allowlegacysdlimplementsinterfaces"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," allowLegacySDLImplementsInterfaces"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"allowLegacySDLImplementsInterfaces"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Inherited from ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-allowlegacysdlimplementsinterfaces"}),"allowLegacySDLImplementsInterfaces"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L79"}),"packages/utils/src/Interfaces.ts:79"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-assumevalid"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," assumeValid"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"assumeValid"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Inherited from ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_merge_src_index_.mergeschemasconfig"}),"MergeSchemasConfig"),".",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/api/interfaces/_merge_src_index_.mergeschemasconfig#optional-assumevalid"}),"assumeValid"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Overrides ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_merge_src_index_.mergeschemasconfig"}),"MergeSchemasConfig"),".",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/api/interfaces/_merge_src_index_.mergeschemasconfig#optional-assumevalid"}),"assumeValid"))),Object(i.b)("p",null,"Defined in node_modules/graphql/type/schema.d.ts:122"),Object(i.b)("p",null,"When building a schema from a GraphQL service's introspection result, it\nmight be safe to assume the schema is valid. Set to true to assume the\nproduced schema is valid."),Object(i.b)("p",null,"Default: false"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-assumevalidsdl"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," assumeValidSDL"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"assumeValidSDL"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Inherited from ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_merge_src_index_.mergeschemasconfig"}),"MergeSchemasConfig"),".",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/api/interfaces/_merge_src_index_.mergeschemasconfig#optional-assumevalidsdl"}),"assumeValidSDL"))),Object(i.b)("p",null,"Defined in node_modules/graphql/utilities/buildASTSchema.d.ts:22"),Object(i.b)("p",null,"Set to true to assume the SDL is valid."),Object(i.b)("p",null,"Default: false"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-commentdescriptions"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," commentDescriptions"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"commentDescriptions"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Inherited from ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-commentdescriptions"}),"commentDescriptions"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Overrides void")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L86"}),"packages/utils/src/Interfaces.ts:86"))),Object(i.b)("p",null,"Set to ",Object(i.b)("inlineCode",{parentName:"p"},"true"),' in order to convert all GraphQL comments (marked with # sign) to descriptions (""")\nGraphQL has built-in support for transforming descriptions to comments (with ',Object(i.b)("inlineCode",{parentName:"p"},"print"),"), but not while\nparsing. Turning the flag on will support the other way as well (",Object(i.b)("inlineCode",{parentName:"p"},"parse"),")"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-cwd"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," cwd"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"cwd"),"? : ",Object(i.b)("em",{parentName:"p"},"string")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Inherited from __type.cwd")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/loaders.ts#L15"}),"packages/utils/src/loaders.ts:15"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-experimentalfragmentvariables"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," experimentalFragmentVariables"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"experimentalFragmentVariables"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Inherited from ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-experimentalfragmentvariables"}),"experimentalFragmentVariables"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L80"}),"packages/utils/src/Interfaces.ts:80"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-nolocation"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," noLocation"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"noLocation"),"? : ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Inherited from ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-nolocation"}),"noLocation"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L77"}),"packages/utils/src/Interfaces.ts:77"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"optional-pluckconfig"},Object(i.b)("inlineCode",{parentName:"h3"},"Optional")," pluckConfig"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"pluckConfig"),"? : ",Object(i.b)("em",{parentName:"p"},Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"_graphql_tag_pluck_src_index_.graphqltagpluckoptions"}),"GraphQLTagPluckOptions"))),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/loaders/github/src/index.ts#L37"}),"packages/loaders/github/src/index.ts:37"))),Object(i.b)("p",null,"Additional options to pass to ",Object(i.b)("inlineCode",{parentName:"p"},"graphql-tag-pluck")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"token"},"token"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("strong",{parentName:"p"},"token"),": ",Object(i.b)("em",{parentName:"p"},"string")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/loaders/github/src/index.ts#L33"}),"packages/loaders/github/src/index.ts:33"))),Object(i.b)("p",null,"A GitHub access token"))}s.isMDXComponent=!0},207:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(a),m=n,u=b["".concat(l,".").concat(m)]||b[m]||d[m]||i;return a?r.a.createElement(u,o(o({ref:t},p),{},{components:a})):r.a.createElement(u,o({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{258:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},b=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),b=s(n),u=a,d=b["".concat(l,".").concat(u)]||b[u]||g[u]||i;return n?r.a.createElement(d,p(p({ref:t},c),{},{components:n})):r.a.createElement(d,p({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var c=2;c<i;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),i=(n(0),n(258)),l={},p={unversionedId:"api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions",id:"api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions",isDocsHomePage:!1,title:"graphql_tag_pluck_src.graphqltagpluckoptions",description:"Interface: GraphQLTagPluckOptions",source:"@site/docs/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions.md",slug:"/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions",permalink:"/docs/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions.md",version:"current",sidebar:"someSidebar",previous:{title:"utils_src.graphqlparseoptions",permalink:"/docs/api/interfaces/utils_src.graphqlparseoptions"},next:{title:"utils_src.iaddresolverstoschemaoptions",permalink:"/docs/api/interfaces/utils_src.iaddresolverstoschemaoptions"}},o=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"globalGqlIdentifierName",id:"globalgqlidentifiername",children:[]},{value:"gqlMagicComment",id:"gqlmagiccomment",children:[]},{value:"modules",id:"modules",children:[]},{value:"skipIndent",id:"skipindent",children:[]}]}],c={toc:o};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"interface-graphqltagpluckoptions"},"Interface: GraphQLTagPluckOptions"),Object(i.b)("p",null,"Additional options for determining how a file is parsed."),Object(i.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"GraphQLTagPluckOptions"))),Object(i.b)("h2",{id:"index"},"Index"),Object(i.b)("h3",{id:"properties"},"Properties"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions#globalgqlidentifiername"}),"globalGqlIdentifierName")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions#gqlmagiccomment"}),"gqlMagicComment")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions#modules"}),"modules")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/interfaces/graphql_tag_pluck_src.graphqltagpluckoptions#skipindent"}),"skipIndent"))),Object(i.b)("h2",{id:"properties-1"},"Properties"),Object(i.b)("h3",{id:"globalgqlidentifiername"},"globalGqlIdentifierName"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.b)("strong",{parentName:"p"},"globalGqlIdentifierName"),": ",Object(i.b)("em",{parentName:"p"},"string")," ","|"," ",Object(i.b)("em",{parentName:"p"},"string"),"[]"),Object(i.b)("p",null,"Allows to use a global identifier instead of a module import."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// `graphql` is a global function\nexport const usersQuery = graphql`\n  {\n    users {\n      id\n      name\n    }\n  }\n`;\n")),Object(i.b)("p",null,"Defined in: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L100"}),"packages/graphql-tag-pluck/src/index.ts:100")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"gqlmagiccomment"},"gqlMagicComment"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.b)("strong",{parentName:"p"},"gqlMagicComment"),": ",Object(i.b)("em",{parentName:"p"},"string")),Object(i.b)("p",null,"The magic comment anchor to look for when parsing GraphQL strings. Defaults to ",Object(i.b)("inlineCode",{parentName:"p"},"graphql"),"."),Object(i.b)("p",null,"Defined in: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L85"}),"packages/graphql-tag-pluck/src/index.ts:85")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"modules"},"modules"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.b)("strong",{parentName:"p"},"modules"),": { ",Object(i.b)("inlineCode",{parentName:"p"},"identifier?"),": ",Object(i.b)("em",{parentName:"p"},"string")," ; ",Object(i.b)("inlineCode",{parentName:"p"},"name"),": ",Object(i.b)("em",{parentName:"p"},"string"),"  }[]"),Object(i.b)("p",null,"Additional options for determining how a file is parsed.An array of packages that are responsible for exporting the GraphQL string parser function. The following modules are supported by default:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"{\n  modules: [\n    {\n      // import gql from 'graphql-tag'\n      name: 'graphql-tag',\n    },\n    {\n      name: 'graphql-tag.macro',\n    },\n    {\n      // import { graphql } from 'gatsby'\n      name: 'gatsby',\n      identifier: 'graphql',\n    },\n    {\n      name: 'apollo-server-express',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server',\n      identifier: 'gql',\n    },\n    {\n      name: 'react-relay',\n      identifier: 'graphql',\n    },\n    {\n      name: 'apollo-boost',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-koa',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-hapi',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-fastify',\n      identifier: 'gql',\n    },\n    {\n      name: ' apollo-server-lambda',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-micro',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-azure-functions',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-cloud-functions',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-cloudflare',\n      identifier: 'gql',\n    },\n  ];\n}\n")),Object(i.b)("p",null,"Defined in: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L81"}),"packages/graphql-tag-pluck/src/index.ts:81")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"skipindent"},"skipIndent"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.b)("strong",{parentName:"p"},"skipIndent"),": ",Object(i.b)("em",{parentName:"p"},"boolean")),Object(i.b)("p",null,"Set to ",Object(i.b)("inlineCode",{parentName:"p"},"true")," in order to get the found documents as-is, without any changes indentation changes"),Object(i.b)("p",null,"Defined in: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/graphql-tag-pluck/src/index.ts#L104"}),"packages/graphql-tag-pluck/src/index.ts:104")))}s.isMDXComponent=!0}}]);
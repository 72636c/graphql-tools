(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{128:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return c})),t.d(a,"metadata",(function(){return b})),t.d(a,"toc",(function(){return l})),t.d(a,"default",(function(){return o}));var n=t(3),s=t(7),r=(t(0),t(552)),c={},b={unversionedId:"api/modules/_packages_delegate_src_mergefields_",id:"api/modules/_packages_delegate_src_mergefields_",isDocsHomePage:!1,title:"_packages_delegate_src_mergefields_",description:"@graphql-tools/utils",source:"@site/docs/api/modules/_packages_delegate_src_mergefields_.md",slug:"/api/modules/_packages_delegate_src_mergefields_",permalink:"/docs/api/modules/_packages_delegate_src_mergefields_",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/modules/_packages_delegate_src_mergefields_.md",version:"current"},l=[{value:"Index",id:"index",children:[{value:"Variables",id:"variables",children:[]},{value:"Functions",id:"functions",children:[]}]},{value:"Variables",id:"variables-1",children:[{value:"buildDelegationPlan",id:"builddelegationplan",children:[]},{value:"combineSubschemas",id:"combinesubschemas",children:[]},{value:"sortSubschemasByProxiability",id:"sortsubschemasbyproxiability",children:[]},{value:"subschemaTypesContainSelectionSet",id:"subschematypescontainselectionset",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"mergeFields",id:"mergefields",children:[]},{value:"typesContainSelectionSet",id:"typescontainselectionset",children:[]}]}],i={toc:l};function o(e){var a=e.components,t=Object(s.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},i,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"strong"},{href:"../README"}),"@graphql-tools/utils"))),Object(r.b)("h1",{id:"module-packagesdelegatesrcmergefields"},'Module: "packages/delegate/src/mergeFields"'),Object(r.b)("h2",{id:"index"},"Index"),Object(r.b)("h3",{id:"variables"},"Variables"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_delegate_src_mergefields_#builddelegationplan"}),"buildDelegationPlan")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_delegate_src_mergefields_#combinesubschemas"}),"combineSubschemas")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_delegate_src_mergefields_#sortsubschemasbyproxiability"}),"sortSubschemasByProxiability")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_delegate_src_mergefields_#subschematypescontainselectionset"}),"subschemaTypesContainSelectionSet"))),Object(r.b)("h3",{id:"functions"},"Functions"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_delegate_src_mergefields_#mergefields"}),"mergeFields")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/api/modules/_packages_delegate_src_mergefields_#typescontainselectionset"}),"typesContainSelectionSet"))),Object(r.b)("h2",{id:"variables-1"},"Variables"),Object(r.b)("h3",{id:"builddelegationplan"},"buildDelegationPlan"),Object(r.b)("p",null,"\u2022 ",Object(r.b)("inlineCode",{parentName:"p"},"Const")," ",Object(r.b)("strong",{parentName:"p"},"buildDelegationPlan"),": (A1: T1, A2: T2, A3: T3) =",">"," R = memoize3(function ( mergedTypeInfo: MergedTypeInfo, fieldNodes: Array","<","FieldNode\\",">",", proxiableSubschemas: Array","<","Subschema\\",">","): { delegationMap: Map","<","Subschema, SelectionSetNode\\",">","; unproxiableFieldNodes: Array","<","FieldNode\\",">",";} { const { uniqueFields, nonUniqueFields } = mergedTypeInfo; const unproxiableFieldNodes: Array","<","FieldNode\\",">"," = []; // 2. for each selection: const delegationMap: Map","<","Subschema, Array","<","SelectionNode\\",">","\\",">"," = new Map(); fieldNodes.forEach(fieldNode =\\",">"," { if (fieldNode.name.value === '","_","_","typename') { return; } // 2a. use uniqueFields map to assign fields to subschema if one of possible subschemas const uniqueSubschema: Subschema = uniqueFields","[fieldNode.name.value]","; if (uniqueSubschema != null) { if (!proxiableSubschemas.includes(uniqueSubschema)) { unproxiableFieldNodes.push(fieldNode); return; } const existingSubschema = delegationMap.get(uniqueSubschema); if (existingSubschema != null) { existingSubschema.push(fieldNode); } else { delegationMap.set(uniqueSubschema, ","[fieldNode]","); } return; } // 2b. use nonUniqueFields to assign to a possible subschema, // preferring one of the subschemas already targets of delegation let nonUniqueSubschemas: Array","<","Subschema\\",">"," = nonUniqueFields","[fieldNode.name.value]","; if (nonUniqueSubschemas == null) { unproxiableFieldNodes.push(fieldNode); return; } nonUniqueSubschemas = nonUniqueSubschemas.filter(s =\\",">"," proxiableSubschemas.includes(s)); if (nonUniqueSubschemas == null) { unproxiableFieldNodes.push(fieldNode); return; } const subschemas: Array","<","Subschema\\",">"," = Array.from(delegationMap.keys()); const existingSubschema = nonUniqueSubschemas.find(s =\\",">"," subschemas.includes(s)); if (existingSubschema != null) { delegationMap.get(existingSubschema).push(fieldNode); } else { delegationMap.set(nonUniqueSubschemas","[0]",", ","[fieldNode]","); } }); const finalDelegationMap: Map","<","Subschema, SelectionSetNode\\",">"," = new Map(); delegationMap.forEach((selections, subschema) =\\",">"," { finalDelegationMap.set(subschema, { kind: Kind.SELECTION","_","SET, selections, }); }); return { delegationMap: finalDelegationMap, unproxiableFieldNodes, };})"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/delegate/src/mergeFields.ts#L66"}),"packages/delegate/src/mergeFields.ts:66"))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"combinesubschemas"},"combineSubschemas"),Object(r.b)("p",null,"\u2022 ",Object(r.b)("inlineCode",{parentName:"p"},"Const")," ",Object(r.b)("strong",{parentName:"p"},"combineSubschemas"),": (A1: T1, A2: T2) =",">"," R = memoize2(function ( subschemaOrSubschemas: Subschema ","|"," Array","<","Subschema\\",">",", additionalSubschemas: Array","<","Subschema\\",">","): Array","<","Subschema\\",">"," { return Array.isArray(subschemaOrSubschemas) ? subschemaOrSubschemas.concat(additionalSubschemas) : ","[subschemaOrSubschemas]",".concat(additionalSubschemas);})"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/delegate/src/mergeFields.ts#L143"}),"packages/delegate/src/mergeFields.ts:143"))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"sortsubschemasbyproxiability"},"sortSubschemasByProxiability"),Object(r.b)("p",null,"\u2022 ",Object(r.b)("inlineCode",{parentName:"p"},"Const")," ",Object(r.b)("strong",{parentName:"p"},"sortSubschemasByProxiability"),": (A1: T1, A2: T2, A3: T3, A4: T4) =",">"," R = memoize4(function ( mergedTypeInfo: MergedTypeInfo, sourceSubschemaOrSourceSubschemas: Subschema ","|"," Array","<","Subschema\\",">",", targetSubschemas: Array","<","Subschema\\",">",", fieldNodes: Array","<","FieldNode\\",">","): { proxiableSubschemas: Array","<","Subschema\\",">","; nonProxiableSubschemas: Array","<","Subschema\\",">",";} { // 1. calculate if possible to delegate to given subschema const proxiableSubschemas: Array","<","Subschema\\",">"," = []; const nonProxiableSubschemas: Array","<","Subschema\\",">"," = []; targetSubschemas.forEach(t =\\",">"," { const selectionSet = mergedTypeInfo.selectionSets.get(t); const fieldSelectionSets = mergedTypeInfo.fieldSelectionSets.get(t); if ( selectionSet != null && !subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemaOrSourceSubschemas, selectionSet) ) { nonProxiableSubschemas.push(t); } else { if ( fieldSelectionSets == null ","|","|"," fieldNodes.every(fieldNode =\\",">"," { const fieldName = fieldNode.name.value; const fieldSelectionSet = fieldSelectionSets","[fieldName]","; return ( fieldSelectionSet == null ","|","|"," subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemaOrSourceSubschemas, fieldSelectionSet) ); }) ) { proxiableSubschemas.push(t); } else { nonProxiableSubschemas.push(t); } } }); return { proxiableSubschemas, nonProxiableSubschemas, };})"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/delegate/src/mergeFields.ts#L19"}),"packages/delegate/src/mergeFields.ts:19"))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"subschematypescontainselectionset"},"subschemaTypesContainSelectionSet"),Object(r.b)("p",null,"\u2022 ",Object(r.b)("inlineCode",{parentName:"p"},"Const")," ",Object(r.b)("strong",{parentName:"p"},"subschemaTypesContainSelectionSet"),": (A1: T1, A2: T2, A3: T3) =",">"," R = memoize3(function ( mergedTypeInfo: MergedTypeInfo, sourceSubschemaOrSourceSubschemas: Subschema ","|"," Array","<","Subschema\\",">",", selectionSet: SelectionSetNode) { if (Array.isArray(sourceSubschemaOrSourceSubschemas)) { return typesContainSelectionSet( sourceSubschemaOrSourceSubschemas.map( sourceSubschema =\\",">"," sourceSubschema.transformedSchema.getType(mergedTypeInfo.typeName) as GraphQLObjectType ), selectionSet ); } return typesContainSelectionSet( ","[sourceSubschemaOrSourceSubschemas.transformedSchema.getType(mergedTypeInfo.typeName) as GraphQLObjectType]",", selectionSet );})"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/delegate/src/mergeFields.ts#L230"}),"packages/delegate/src/mergeFields.ts:230"))),Object(r.b)("h2",{id:"functions-1"},"Functions"),Object(r.b)("h3",{id:"mergefields"},"mergeFields"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"mergeFields"),"(",Object(r.b)("inlineCode",{parentName:"p"},"mergedTypeInfo"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/interfaces/_packages_delegate_src_types_.mergedtypeinfo"}),"MergedTypeInfo"),", ",Object(r.b)("inlineCode",{parentName:"p"},"typeName"),": string, ",Object(r.b)("inlineCode",{parentName:"p"},"object"),": any, ",Object(r.b)("inlineCode",{parentName:"p"},"fieldNodes"),": Array","<","FieldNode\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"sourceSubschemaOrSourceSubschemas"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema")," ","|"," Array","<",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema"),"\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"targetSubschemas"),": Array","<",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema"),"\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"context"),": Record","<","string, any\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"info"),": GraphQLResolveInfo): any"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/delegate/src/mergeFields.ts#L152"}),"packages/delegate/src/mergeFields.ts:152"))),Object(r.b)("h4",{id:"parameters"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"mergedTypeInfo")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/interfaces/_packages_delegate_src_types_.mergedtypeinfo"}),"MergedTypeInfo"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"typeName")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"object")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"fieldNodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Array","<","FieldNode\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"sourceSubschemaOrSourceSubschemas")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema")," ","|"," Array","<",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema"),"\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"targetSubschemas")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Array","<",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/api/classes/_packages_delegate_src_subschema_.subschema"}),"Subschema"),"\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"context")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Record","<","string, any\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"info")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GraphQLResolveInfo")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," any"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"typescontainselectionset"},"typesContainSelectionSet"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"typesContainSelectionSet"),"(",Object(r.b)("inlineCode",{parentName:"p"},"types"),": Array","<","GraphQLObjectType\\",">",", ",Object(r.b)("inlineCode",{parentName:"p"},"selectionSet"),": SelectionSetNode): boolean"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/delegate/src/mergeFields.ts#L250"}),"packages/delegate/src/mergeFields.ts:250"))),Object(r.b)("h4",{id:"parameters-1"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"types")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Array","<","GraphQLObjectType\\",">")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"selectionSet")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SelectionSetNode")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," boolean"))}o.isMDXComponent=!0},552:function(e,a,t){"use strict";t.d(a,"a",(function(){return d})),t.d(a,"b",(function(){return p}));var n=t(0),s=t.n(n);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function c(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function b(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?c(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=s.a.createContext({}),o=function(e){var a=s.a.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):b(b({},a),e)),t},d=function(e){var a=o(e.components);return s.a.createElement(i.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return s.a.createElement(s.a.Fragment,{},a)}},u=s.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),d=o(t),u=n,p=d["".concat(c,".").concat(u)]||d[u]||m[u]||r;return t?s.a.createElement(p,b(b({ref:a},i),{},{components:t})):s.a.createElement(p,b({ref:a},i))}));function p(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,c=new Array(r);c[0]=u;var b={};for(var l in a)hasOwnProperty.call(a,l)&&(b[l]=a[l]);b.originalType=e,b.mdxType="string"==typeof e?e:n,c[1]=b;for(var i=2;i<r;i++)c[i]=t[i];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);
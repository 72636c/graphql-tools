(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{207:function(e,a,t){"use strict";t.d(a,"a",(function(){return b})),t.d(a,"b",(function(){return O}));var r=t(0),n=t.n(r);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=n.a.createContext({}),s=function(e){var a=n.a.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},b=function(e){var a=s(e.components);return n.a.createElement(c.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},m=n.a.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),b=s(t),m=r,O=b["".concat(i,".").concat(m)]||b[m]||d[m]||l;return t?n.a.createElement(O,o(o({ref:a},c),{},{components:t})):n.a.createElement(O,o({ref:a},c))}));function O(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=m;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=t[c];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},62:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return o})),t.d(a,"rightToc",(function(){return p})),t.d(a,"default",(function(){return s}));var r=t(3),n=t(7),l=(t(0),t(207)),i={id:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions",title:"GraphQLFileLoaderOptions",sidebar_label:"GraphQLFileLoaderOptions"},o={unversionedId:"api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions",id:"api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions",isDocsHomePage:!1,title:"GraphQLFileLoaderOptions",description:"Additional options for loading from a GraphQL file",source:"@site/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions.md",slug:"/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions",permalink:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions.md",version:"current",sidebar_label:"GraphQLFileLoaderOptions",sidebar:"someSidebar",previous:{title:"GraphQLExecutionContext",permalink:"/docs/api/interfaces/_utils_src_index_.graphqlexecutioncontext"},next:{title:"GraphQLParseOptions",permalink:"/docs/api/interfaces/_utils_src_index_.graphqlparseoptions"}},p=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Index",id:"index",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"<code>Optional</code> allowLegacySDLEmptyFields",id:"optional-allowlegacysdlemptyfields",children:[]},{value:"<code>Optional</code> allowLegacySDLImplementsInterfaces",id:"optional-allowlegacysdlimplementsinterfaces",children:[]},{value:"<code>Optional</code> assumeValid",id:"optional-assumevalid",children:[]},{value:"<code>Optional</code> assumeValidSDL",id:"optional-assumevalidsdl",children:[]},{value:"<code>Optional</code> commentDescriptions",id:"optional-commentdescriptions",children:[]},{value:"<code>Optional</code> cwd",id:"optional-cwd",children:[]},{value:"<code>Optional</code> experimentalFragmentVariables",id:"optional-experimentalfragmentvariables",children:[]},{value:"<code>Optional</code> noLocation",id:"optional-nolocation",children:[]},{value:"<code>Optional</code> skipGraphQLImport",id:"optional-skipgraphqlimport",children:[]}]}],c={rightToc:p};function s(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Additional options for loading from a GraphQL file"),Object(l.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"_utils_src_index_.graphqlparseoptions"}),"GraphQLParseOptions")," & GraphQLSchemaValidationOptions & BuildSchemaOptions & object"),Object(l.b)("p",{parentName:"li"},"\u21b3 ",Object(l.b)("strong",{parentName:"p"},"GraphQLFileLoaderOptions")))),Object(l.b)("h2",{id:"index"},"Index"),Object(l.b)("h3",{id:"properties"},"Properties"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-allowlegacysdlemptyfields"}),"allowLegacySDLEmptyFields")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-allowlegacysdlimplementsinterfaces"}),"allowLegacySDLImplementsInterfaces")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-assumevalid"}),"assumeValid")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-assumevalidsdl"}),"assumeValidSDL")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-commentdescriptions"}),"commentDescriptions")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-cwd"}),"cwd")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-experimentalfragmentvariables"}),"experimentalFragmentVariables")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-nolocation"}),"noLocation")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-skipgraphqlimport"}),"skipGraphQLImport"))),Object(l.b)("h2",{id:"properties-1"},"Properties"),Object(l.b)("h3",{id:"optional-allowlegacysdlemptyfields"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," allowLegacySDLEmptyFields"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"allowLegacySDLEmptyFields"),"? : ",Object(l.b)("em",{parentName:"p"},"boolean")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Inherited from ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-allowlegacysdlemptyfields"}),"allowLegacySDLEmptyFields"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L78"}),"packages/utils/src/Interfaces.ts:78"))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"optional-allowlegacysdlimplementsinterfaces"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," allowLegacySDLImplementsInterfaces"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"allowLegacySDLImplementsInterfaces"),"? : ",Object(l.b)("em",{parentName:"p"},"boolean")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Inherited from ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-allowlegacysdlimplementsinterfaces"}),"allowLegacySDLImplementsInterfaces"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L79"}),"packages/utils/src/Interfaces.ts:79"))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"optional-assumevalid"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," assumeValid"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"assumeValid"),"? : ",Object(l.b)("em",{parentName:"p"},"boolean")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Inherited from ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"_merge_src_index_.mergeschemasconfig"}),"MergeSchemasConfig"),".",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_merge_src_index_.mergeschemasconfig#optional-assumevalid"}),"assumeValid"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Overrides ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"_merge_src_index_.mergeschemasconfig"}),"MergeSchemasConfig"),".",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_merge_src_index_.mergeschemasconfig#optional-assumevalid"}),"assumeValid"))),Object(l.b)("p",null,"Defined in node_modules/graphql/type/schema.d.ts:122"),Object(l.b)("p",null,"When building a schema from a GraphQL service's introspection result, it\nmight be safe to assume the schema is valid. Set to true to assume the\nproduced schema is valid."),Object(l.b)("p",null,"Default: false"),Object(l.b)("hr",null),Object(l.b)("h3",{id:"optional-assumevalidsdl"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," assumeValidSDL"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"assumeValidSDL"),"? : ",Object(l.b)("em",{parentName:"p"},"boolean")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Inherited from ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"_merge_src_index_.mergeschemasconfig"}),"MergeSchemasConfig"),".",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_merge_src_index_.mergeschemasconfig#optional-assumevalidsdl"}),"assumeValidSDL"))),Object(l.b)("p",null,"Defined in node_modules/graphql/utilities/buildASTSchema.d.ts:22"),Object(l.b)("p",null,"Set to true to assume the SDL is valid."),Object(l.b)("p",null,"Default: false"),Object(l.b)("hr",null),Object(l.b)("h3",{id:"optional-commentdescriptions"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," commentDescriptions"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"commentDescriptions"),"? : ",Object(l.b)("em",{parentName:"p"},"boolean")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Inherited from ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-commentdescriptions"}),"commentDescriptions"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Overrides void")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L86"}),"packages/utils/src/Interfaces.ts:86"))),Object(l.b)("p",null,"Set to ",Object(l.b)("inlineCode",{parentName:"p"},"true"),' in order to convert all GraphQL comments (marked with # sign) to descriptions (""")\nGraphQL has built-in support for transforming descriptions to comments (with ',Object(l.b)("inlineCode",{parentName:"p"},"print"),"), but not while\nparsing. Turning the flag on will support the other way as well (",Object(l.b)("inlineCode",{parentName:"p"},"parse"),")"),Object(l.b)("hr",null),Object(l.b)("h3",{id:"optional-cwd"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," cwd"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"cwd"),"? : ",Object(l.b)("em",{parentName:"p"},"string")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Inherited from __type.cwd")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/loaders.ts#L15"}),"packages/utils/src/loaders.ts:15"))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"optional-experimentalfragmentvariables"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," experimentalFragmentVariables"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"experimentalFragmentVariables"),"? : ",Object(l.b)("em",{parentName:"p"},"boolean")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Inherited from ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-experimentalfragmentvariables"}),"experimentalFragmentVariables"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L80"}),"packages/utils/src/Interfaces.ts:80"))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"optional-nolocation"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," noLocation"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"noLocation"),"? : ",Object(l.b)("em",{parentName:"p"},"boolean")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Inherited from ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"_loaders_graphql_file_src_index_.graphqlfileloaderoptions"}),"GraphQLFileLoaderOptions"),".",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/api/interfaces/_loaders_graphql_file_src_index_.graphqlfileloaderoptions#optional-nolocation"}),"noLocation"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/utils/src/Interfaces.ts#L77"}),"packages/utils/src/Interfaces.ts:77"))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"optional-skipgraphqlimport"},Object(l.b)("inlineCode",{parentName:"h3"},"Optional")," skipGraphQLImport"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"skipGraphQLImport"),"? : ",Object(l.b)("em",{parentName:"p"},"boolean")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/ardatan/graphql-tools/blob/master/packages/loaders/graphql-file/src/index.ts#L28"}),"packages/loaders/graphql-file/src/index.ts:28"))),Object(l.b)("p",null,"Set to ",Object(l.b)("inlineCode",{parentName:"p"},"true")," to disable handling ",Object(l.b)("inlineCode",{parentName:"p"},"#import")," syntax"))}s.isMDXComponent=!0}}]);